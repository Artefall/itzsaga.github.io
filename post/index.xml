<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My Flatiron Journey</title>
    <link>https://itzsaga.github.io/post/index.xml</link>
    <description>Recent content in Posts on My Flatiron Journey</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 31 Mar 2017 23:26:51 -0500</lastBuildDate>
    <atom:link href="https://itzsaga.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Day 33</title>
      <link>https://itzsaga.github.io/post/day-033/</link>
      <pubDate>Fri, 31 Mar 2017 23:26:51 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-033/</guid>
      <description>&lt;p&gt;I started Active Record tonight and I&amp;rsquo;m stoked. Mostly because a lot of the work has already been done and now I can just use the magic that is provided to me. I think I have always had the basic understanding that there are libraries that will be doing a lot of the things I have been learning for me. That is why when I get stuck on things but can still complete projects and labs I just push through. I definitely save bookmarks to go back to if need be but ultimately I want to see how granularly I really need to know some of these concepts before I spend hours learning them deeper. While I know having the deeper understanding is a good thing I also have a timeline I&amp;rsquo;m working with and can dive deeper into topics once I&amp;rsquo;ve graduated or have landed a job.&lt;/p&gt;

&lt;p&gt;Database migrations are a nice thing to have.&lt;/p&gt;

&lt;p&gt;I got sutck for a while tonight because my environment was throwing an error in relation to the JSON gem. Specifically version &lt;code&gt;1.8.3&lt;/code&gt; which was inthe &lt;code&gt;Gemfile.lock&lt;/code&gt; of afew of the labs I&amp;rsquo;ve worked on tonight. I learned with the help of a Learn Expert (someone who&amp;rsquo;s around to help out studnets) that the &lt;code&gt;Gemfile.lock&lt;/code&gt; is pretty much a set of dependencies that were used when the files were written and are statically set to keep things consistent. So we deleted that file and ran &lt;code&gt;bundle&lt;/code&gt; again and everything worked fine. Luckily I asked why we did what we did so I would know enough to repeat the process tonight. Every time I run into this problem I do raise an issue on GitHub so hopefully it&amp;rsquo;ll be taken care of for those following behind me.&lt;/p&gt;

&lt;p&gt;I feel like I&amp;rsquo;m behind on the target I set for myself and I have the &lt;a href=&#34;https://www.facebook.com/groups/free.code.camp.nashville&#34;&gt;Free Code Camp Nashville&lt;/a&gt; meetup to go to tomorrow. Plus a wedding shower on Sunday. I still plan to be done with Rack this weekend. That&amp;rsquo;s 22 lessons/labs. I also am considering adding an extra full day into next week by having my nanny come and watch my girls on Friday. So instead of 3 hours next Friday night, I can hit it hard all day and have a 10 hour day. We&amp;rsquo;ll see how I feel after Monday&amp;rsquo;s progress.&lt;/p&gt;

&lt;p&gt;Something I did to save some time is now when I generate my static blog files they automatically are put into my proper local file location to be uploaded to the seperate repo. That&amp;rsquo;s a complicated sentence to say, I keep my content in one folder and repo, and my public facing files in another folder and repo. I had been generating the public file then copying and pasting in my file manager. Now the files are generated directly into the proper folder saving me a few steps and speeding up my publishing time.&lt;/p&gt;

&lt;p&gt;Time spent today: 2:43&lt;br /&gt;
Time spent total: 137:55&lt;br /&gt;
Lessons completed today: 5&lt;br /&gt;
Lessons completed total: 330&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Learning Hacks</title>
      <link>https://itzsaga.github.io/post/my-learning-hacks/</link>
      <pubDate>Thu, 30 Mar 2017 23:28:06 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/my-learning-hacks/</guid>
      <description>&lt;p&gt;So I wanted to share the hacks that I&amp;rsquo;m using to upgrade my life some and increase my mental aptitude to crushing this curriculum. There is a certain amount of mental stamina that has to be maintained on a day to day basis to keep up this pace. So&amp;hellip; here&amp;rsquo;s my brain upgrades/biohacks/etc&amp;hellip; that keep my moving tip top while doing this bootcamp full time and taking care of kids full time. All with links to the best place to buy them.&lt;/p&gt;

&lt;p&gt;First thing is my coffee. I start my day off with my take on, Bulletproof Coffee. I currently use Central American Single Origin Organic whole bean coffee from Aldi. The most important thing for me is my coffee being light to medium roast. Nothing dark. I also like whole bean because coffee really does taste &lt;strong&gt;way&lt;/strong&gt; better if it&amp;rsquo;s fresh ground. I add to that 1 tbsp of &lt;a href=&#34;http://thrv.me/GWQK6N&#34;&gt;Thrive Market Ghee&lt;/a&gt; and 1 tbsp of whatever I have around to up ketones. I prefer &lt;a href=&#34;http://amzn.to/2nQOZoe&#34;&gt;Brain Octane Oil&lt;/a&gt; because it definitely is nicer on the insides but also use &lt;a href=&#34;http://thrv.me/pP3hDQ&#34;&gt;Now Foods MCT Oil&lt;/a&gt; or just &lt;a href=&#34;http://thrv.me/c4sQTU&#34;&gt;Coconut Oil&lt;/a&gt; if I have neither of the aforementioned. I blend this all up together. This gets me going and curbs hunger for hours. I also pop a couple &lt;a href=&#34;http://amzn.to/2ohk6dG&#34;&gt;BioScience Brain Boost&lt;/a&gt; and wash them down with my coffee.&lt;/p&gt;

&lt;p&gt;I then hopefully do my &lt;a href=&#34;https://www.gymnasticbodies.com/&#34;&gt;Gymnastic Bodies&lt;/a&gt; Daily Limber routine to get the blood flowing some. I follow that up with some meditation utilizing &lt;a href=&#34;https://www.calm.com/&#34;&gt;Calm&lt;/a&gt;. I try (but usually fail) to write my daily journal entry utilizing &lt;a href=&#34;https://www.evernote.com/shard/s34/sh/d31e2f00-610a-4d05-8c6e-44b5e6fd5a75/ee032628c7bcb8547e2bfb7f4bdb681e&#34;&gt;this template&lt;/a&gt; I built in Evernote. I very rarely get all of these things done. However, I try to.&lt;/p&gt;

&lt;p&gt;When I&amp;rsquo;m on long coding sessions I supplement in the middle of the day with &lt;a href=&#34;http://thrv.me/WBcGBK&#34;&gt;Four Sigmatic Lion&amp;rsquo;s Mane&lt;/a&gt; which I&amp;rsquo;ve found can really get me going. I have to ensure I&amp;rsquo;m stimulated enough mentally or I start getting distracted trying to keep my brain working hard enough. I also diffuse essential oils in my workspace. Specifically &lt;a href=&#34;http://thrv.me/7YEQ7F&#34;&gt;Lemon&lt;/a&gt;, &lt;a href=&#34;http://thrv.me/RwiYBf&#34;&gt;Rosemary&lt;/a&gt;, and &lt;a href=&#34;http://thrv.me/evMTdr&#34;&gt;Eucalyptus&lt;/a&gt;. All three of those are supposed to help with concentration and mental performance. I find the scents definitely keep me alert if not anything else. Something that I recently ran across is &lt;a href=&#34;https://nootrobox.com/sprint&#34;&gt;Nootrobox Sprint&lt;/a&gt; and I&amp;rsquo;m interested to try it out. I might just order the mini bottle for $15.&lt;/p&gt;

&lt;p&gt;That should be it if I remember correctly. If I realize I missed something I&amp;rsquo;ll update this post.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UPDATE 3/31/17&lt;/strong&gt;&lt;br /&gt;
I completely forgot about how I listen to &lt;a href=&#34;https://www.brain.fm&#34;&gt;Brain.fm&lt;/a&gt; whenever I&amp;rsquo;m doing work. It really zones me in more than anything I&amp;rsquo;ve ever listened to. I used to use Spotify playlists but now this is the ONLY thing I&amp;rsquo;ll listen to when I need to concentrate.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 32</title>
      <link>https://itzsaga.github.io/post/day-032/</link>
      <pubDate>Thu, 30 Mar 2017 22:38:56 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-032/</guid>
      <description>&lt;p&gt;Almost 3 hours of review vidoes watched tonight. On thing that I think can be very useful to all. A double bang &lt;code&gt;!!&lt;/code&gt; converts an object to it&amp;rsquo;s truthy value. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;seth@seth-u:~$ irb
2.4.0 :001 &amp;gt; 1
 =&amp;gt; 1
2.4.0 :002 &amp;gt; !1
 =&amp;gt; false
2.4.0 :003 &amp;gt; !!1
 =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So the return value of &lt;code&gt;1&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt; we know &lt;code&gt;1&lt;/code&gt; has a boolean value of &lt;code&gt;true&lt;/code&gt;. So &lt;code&gt;!1&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; and thus &lt;code&gt;!!1&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;. This can be useful for obvious reasons.&lt;/p&gt;

&lt;p&gt;Time spent today: 2:41&lt;br /&gt;
Time spent total: 135:13&lt;br /&gt;
Lessons completed today: 3&lt;br /&gt;
Lessons completed total: 325&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 31</title>
      <link>https://itzsaga.github.io/post/day-031/</link>
      <pubDate>Wed, 29 Mar 2017 23:18:22 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-031/</guid>
      <description>&lt;p&gt;Tonight I had my CLI Gem Project review with one of the instructors. It was pretty cool. I talked through my project from start to almost finish (I realized after we finished we never went over the last method that takes user input to either start over or end). We added another class and refactored some code to make my gen more extensible and flexible in the future. While they&amp;rsquo;re not official tasks I set a couple new features I want to add to the gem.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Allow users to pick the date that they want meetups for instead of only returning current day meetups.&lt;/li&gt;
&lt;li&gt;If a person sees a meetup they want more info on they can enter it&amp;rsquo;s number and open the page for that event in their default browser.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I think these are two useful and good additions. I&amp;rsquo;m not sure when I&amp;rsquo;ll find the time to get them done but I&amp;rsquo;ll get them done. Cernan who did my review also informed me that he has seen students get hired just from having a solid CLI Gem so I definitely want to make this portfolio project stronger than it currently is. I think adding those two features I will be able to call it v1.0.0 and release it into the wild.&lt;/p&gt;

&lt;p&gt;I finished up ORM except for some review videos which I&amp;rsquo;ll watch tomorrow. I could have finished the first video but my wife took our eldest daughter to get ice cream and my infant decided she didn&amp;rsquo;t want to be happy unless she was being held. However, there are worse things than not being able to code because your daughter wants to be held. Eventually she&amp;rsquo;ll be too big to fit in my arms so I&amp;rsquo;ll enjoy it now. Hopefully I can put an extra hour in tomorrow and catch back up to where I want to be this week.&lt;/p&gt;

&lt;p&gt;Time spent today: 2:10&lt;br /&gt;
Time spent total: 132:32&lt;br /&gt;
Lessons completed today: 4&lt;br /&gt;
Lessons completed total: 322&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 30</title>
      <link>https://itzsaga.github.io/post/day-030/</link>
      <pubDate>Tue, 28 Mar 2017 23:15:53 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-030/</guid>
      <description>&lt;p&gt;Tonight I was able to get much deeper into the ORM section. The curriculum returned to the lesson then lab format that is more familiar. Learn how to build a few methods and why you build them that way. Then immediately do it locally. Then the next lesson builds on the last. This is much easier to make progress through and I feel much better about databases now. Well, I feel much better about how they integrate and how Ruby wraps them. I&amp;rsquo;m on a lab entitled &amp;ldquo;Bringing It All Together&amp;rdquo; and it looks like there is a small section on Dynamic ORMs before I move into learning about ActiveRecord.&lt;/p&gt;

&lt;p&gt;A spot where I got stuck for abit was instantiating a new object using a Hash. This is something I had not done before and was not easily found via &lt;a href=&#34;https://duckduckgo.com/&#34;&gt;DuckDuckGo&lt;/a&gt; (yes my default search engine &lt;strong&gt;&lt;em&gt;is not&lt;/em&gt;&lt;/strong&gt; Google). So I ended up throwing some code I found into my file and it passed the test! Here it is:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def initialize(h)
  h.each {|k,v| public_send(&amp;quot;#{k}=&amp;quot;,v)}
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I still had to make sure I had my &lt;code&gt;attr_accessor&lt;/code&gt;&amp;rsquo;s in place to pass my tests but that&amp;rsquo;s a pretty nifty piece of code I&amp;rsquo;ll be sure to save for later.&lt;/p&gt;

&lt;p&gt;The same music library examples are being used and I&amp;rsquo;m having flashbacks to my Music Library CLI project that I completed with Mike. I can only imagine building that again utilizing a database. Hopefully by the end of this DB section I won&amp;rsquo;t feel as intimidated by such a task.&lt;/p&gt;

&lt;p&gt;On a non-coding note. My youngest daughter hasn&amp;rsquo;t been getting up in the middle of the night to eat so now I&amp;rsquo;m being tasked with her first meal of the day because mommy is almost out the door at that time for work and doesn&amp;rsquo;t have time. This means I&amp;rsquo;m getting up at 6am pretty regularly right now. It&amp;rsquo;ll be nice if she starts sleeping until 7 or 8. If she keeps this up though I&amp;rsquo;m going to go back to a split coding day with some time in the morning and night.&lt;/p&gt;

&lt;p&gt;Time spent today: 2:41&lt;br /&gt;
Time spent total: 130:22&lt;br /&gt;
Lessons completed today: 8&lt;br /&gt;
Lessons completed total: 318&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 29</title>
      <link>https://itzsaga.github.io/post/day-029/</link>
      <pubDate>Mon, 27 Mar 2017 23:14:44 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-029/</guid>
      <description>&lt;p&gt;Polished off the SQL tonight and I have to say it was more in depth than I thought it would be. It&amp;rsquo;s one of those things that is hard to visualize being new to it. When the tables are laid out in a grid it all makes sense but just trying to do it all in your head is confusing, even for me. I&amp;rsquo;m sure if I was doing it every day it would be much more intuitive but right now I&amp;rsquo;m still a little fuzzy on keeping track of the data I&amp;rsquo;m looking for through multiple &lt;code&gt;JOINS&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I started on ORM (Object Relational Mapping) tonight but only got through the first lesson and lab before calling it. I&amp;rsquo;m seeing how it all connects though to store data persistently. The main thing being this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;An ORM is really just a concept. It is a design pattern, a conventional way for us to organize our programs when we want those programs to connect to a database. The convention is this:&lt;/p&gt;

&lt;p&gt;When &amp;ldquo;mapping&amp;rdquo; our program to a database, we equate classes with database tables and instances of those classes with table rows.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This overview really makes it simple to think about the objects I&amp;rsquo;ve been working with and how they&amp;rsquo;ll be stored and retrieved.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve realized my 7 lessons/labs per day is pretty ambitious. Especially on these days when I work for ~3 hours. I think I can make up the rest on my LONG weekend coding sessions if I actually get 10+ hours in on Saturday and Sunday. We&amp;rsquo;ll see.&lt;/p&gt;

&lt;p&gt;Time spent today: 3:20&lt;br /&gt;
Time spent total: 127:41&lt;br /&gt;
Lessons completed today: 3&lt;br /&gt;
Lessons completed total: 310&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 28</title>
      <link>https://itzsaga.github.io/post/day-028/</link>
      <pubDate>Sun, 26 Mar 2017 23:41:22 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-028/</guid>
      <description>&lt;p&gt;Today started with multiple review videos on the CLI Gem Project. I also was able to schedule my project review for Wednesday night. I&amp;rsquo;m looking forward to some one-on-one time with an instructor talking through my code. The project states:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;BE PREPARED TO:&lt;/strong&gt;&lt;br /&gt;
1. Explain your code from execution point to exit point. We&amp;rsquo;re making sure you wrote it and understand how it works, nothing else. 10-20 minutes
2. Refactor code. 10-20 minutes&lt;/p&gt;

&lt;p&gt;If necessary, after the assessment, be prepared to:&lt;br /&gt;
1. Extend the application with a new feature, more data, a different domain etc. 20-30 minutes
2. Submit an improved version.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;However, until then I&amp;rsquo;m pushing on.&lt;/p&gt;

&lt;p&gt;Today I got through most of the SQL (Structured Query Language) section of the curriculum, 89% to be exact and I&amp;rsquo;m committed to finishing it up tomorrow. In this section I&amp;rsquo;m learning:
-   How to create &lt;a href=&#34;https://sqlite.org/&#34;&gt;SQLite3&lt;/a&gt; databases.
-   How to create, update, select, and delete data from database tables.
-   How to relate data within a given database.
-   How to write SQL code in both my command line and my text editor and execute the code against a database.
-   How to write Ruby programs that talk to and save data to my databases.&lt;/p&gt;

&lt;p&gt;I have to say it&amp;rsquo;s more interesting that I thought it would be. In addition, I can see perfectly how databases fit into the whole web app ecosystem. It&amp;rsquo;s also fairly easy to pickup the SQL DSL (domain specific language) because it&amp;rsquo;s pretty much just procedural coding. I also have done a couple intro SQL Server courses in the &lt;a href=&#34;https://mva.microsoft.com/&#34;&gt;Microsoft Virtual Academy&lt;/a&gt; so the vocabulary wasn&amp;rsquo;t new to me and I understand the 30,000 ft view of databases and relational databases.&lt;/p&gt;

&lt;p&gt;I feel good about progress again after today. I had felt stalled (I know I was making progress though just couldn&amp;rsquo;t see it as much in the &amp;ldquo;numbers&amp;rdquo;) for a bit. Coming after SQL is Object Relational Mapping (ORM) and ActiveRecord, then Rack, then Sinatra where I&amp;rsquo;ll build my next portfolio project. After that comes Rails and when I&amp;rsquo;m done with Rails the job hunt can commence, although, I&amp;rsquo;ll still have more learning to do to graduate. After Rails is a bunch of Javascript, Rails and Javacript, React and finally Redux. It&amp;rsquo;s a lot but I know will move by at a good pace. My ambitious goal is to be done with or working on the Sinatra projects by 4/9/17. Two weeks to complete 40 lessons and 55 labs&amp;hellip; that&amp;rsquo;s 7 per day. I think I like that. Instead of setting an amount of time to get things done completing a set amount of the curriculum. As long as I pull out projects which take much more time I think this could be doable in the long run. I wonder what my pace has been so far&amp;hellip; 10.96/day is the pace I&amp;rsquo;m sitting at. Hmmm&amp;hellip; maybe I&amp;rsquo;ll stick with the time format as I seem to be getting more done that way. Either way I&amp;rsquo;m going to benchmark and see if I&amp;rsquo;m at 48 more lessons complete by next week and on pace. This is good.&lt;/p&gt;

&lt;p&gt;Time spent today: 6:00&lt;br /&gt;
Time spent total: 124:21&lt;br /&gt;
Lessons completed today: 17&lt;br /&gt;
Lessons completed total: 307&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 27</title>
      <link>https://itzsaga.github.io/post/day-027/</link>
      <pubDate>Sat, 25 Mar 2017 23:57:30 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-027/</guid>
      <description>&lt;p&gt;So I went later than I wanted to tonight, but I was on a roll. I would have finished much earlier but I spent 2.5 hours today at a developer meetup. It was interesting as I&amp;rsquo;ve only been to one other so far. It was good to meet some people and start putting real people to the dev community in Nashville. I did find out that basically nobody is learning/using Ruby (at least at this meetup). The largest language according to the people today is .NET because of all the health care companies. I showed a lab to a guy who&amp;rsquo;s 4 months in at &lt;a href=&#34;http://nashvillesoftwareschool.com/&#34;&gt;Nashville Software School&lt;/a&gt; and he was impressed with the TDD and seeing how it worked. He said he never sees tests like that and doesn&amp;rsquo;t know anything about writing them. I assured him I didn&amp;rsquo;t know much a bout writing tests either but I did read them all day long.&lt;/p&gt;

&lt;p&gt;The big announcement is &amp;hellip; &lt;strong&gt;I FINISHED MY CLI GEM PROJECT!&lt;/strong&gt; Now, I haven&amp;rsquo;t done my review with my instructor and &lt;em&gt;passed&lt;/em&gt; yet but it&amp;rsquo;s done. I&amp;rsquo;m currently working through my &lt;a href=&#34;https://travis-ci.org/itzsaga/meetups-around&#34;&gt;Travis CI&lt;/a&gt; tests and getting those to pass. I expect that to be passing soon and then I&amp;rsquo;ll update my gem. It&amp;rsquo;s already live on &lt;a href=&#34;https://rubygems.org/gems/meetups_around&#34;&gt;RubyGems.org&lt;/a&gt;! I&amp;rsquo;ll have a new version pushed up when I get my Travis passing.&lt;/p&gt;

&lt;p&gt;So I had a few hang ups along the way but most of it had to do with scraping. I figured it out though by trial and error. From what I understand scraping is mostly trial and error so there isn&amp;rsquo;t much to pass along knowledge wise. I did run into the problem of trying to turn this: &lt;code&gt;&amp;quot;7\n&amp;quot; + &amp;quot;\n&amp;quot; + &amp;quot;\n&amp;quot; + &amp;quot;Paddlers\n&amp;quot; + &amp;quot;\n&amp;quot; + &amp;quot;going&amp;quot;&lt;/code&gt; into this: &lt;code&gt;&amp;quot;7 Paddlers going&amp;quot;&lt;/code&gt;. When I did &lt;code&gt;gsub(&amp;quot;\n&amp;quot;, &amp;quot;&amp;quot;)&lt;/code&gt; it returned &lt;code&gt;7Paddlersgoing&lt;/code&gt; and &lt;code&gt;gsub(&amp;quot;\n&amp;quot;, &amp;quot; &amp;quot;)&lt;/code&gt; returned &lt;code&gt;&amp;quot;7   Paddlers  going&amp;quot;&lt;/code&gt; with too many spaces. I was thinking I was going to have to split the string into an array, filter out the &lt;code&gt;\n&lt;/code&gt; and then join the array. Then I thought, &amp;ldquo;Why not Google turning multiple spaces into a single space.&amp;rdquo; That seems like a problem someone would have solved already. Guess what? They have. So I ended up with &lt;code&gt;row.css(&amp;quot;div.attendee-count&amp;quot;).text.strip.gsub(&amp;quot;\n&amp;quot;, &amp;quot; &amp;quot;).gsub(/\s+/, &#39; &#39;)&lt;/code&gt;. Called &lt;code&gt;gsub&lt;/code&gt; on a string that had already been changed.&lt;/p&gt;

&lt;p&gt;I just realized that Travis is never going to pass because I don&amp;rsquo;t have any tests in my gem. Whoops! So I&amp;rsquo;ll remove that integration for now. It&amp;rsquo;ll be a nice future project to write tests for the gem.&lt;/p&gt;

&lt;p&gt;To explain my project in brief, you run the program from the command line, it asks you to input a zip code to see meetups from, if you enter less or more than 5 digits or not 5 digits, say 5 letter, it tell you to input 5 numbers. Then it asks for a radius to search in, I limited the radius to &amp;lt;100 miles. Then it returns a list of all the meetups scheduled for today. If there are none it tells you such. It then asks you if you&amp;rsquo;d like to search again. I&amp;rsquo;m proud as well as ready to move on to SQL.&lt;/p&gt;

&lt;p&gt;Time spent today: 7:24&lt;br /&gt;
Time spent total: 118:21&lt;br /&gt;
Lessons completed today: 1&lt;br /&gt;
Lessons completed total: 286&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 26</title>
      <link>https://itzsaga.github.io/post/day-026/</link>
      <pubDate>Fri, 24 Mar 2017 22:46:48 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-026/</guid>
      <description>&lt;p&gt;Tonight I made some good progress on my CLI project. I finished watching Avi&amp;rsquo;s video on the project and it helped &lt;strong&gt;A LOT&lt;/strong&gt;.  It was long so I decided to just complete the basic stub of my project and leave it at that for tonight. I really like working with fake placeholder data for as long as possible. This way it&amp;rsquo;ll all &lt;em&gt;hopefully&lt;/em&gt; just work when real data is passed in. So taking the stub I&amp;rsquo;m sharing below and abstracting that out to have objects holding the data for each meetup. Then building the methods to create those objects in another class.&lt;/p&gt;

&lt;p&gt;What I have so far:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class MeetupsAround::CLI
  attr_reader :todays_date

  def call
    @todays_date = &amp;quot;Saturday, March 25&amp;quot;
    input_zipcode
    input_radius
    list_meetups
    again?
  end

  def input_zipcode
    puts &amp;quot;What zip code would you like to see meetups for?&amp;quot;
    zip_code = gets.strip
    if /\b\d{5}\b/.match?(zip_code)
      nil
    else
      puts &amp;quot;Please enter a five digit zip code.&amp;quot;
      self.input_zipcode
    end
  end

  def input_radius
    puts &amp;quot;What radius around that zip code would you like to see meetups for?&amp;quot;
    radius = gets.strip
    if /\b\d{1,2}\b/.match?(radius)
      nil
    else
      puts &amp;quot;Please enter a radius less than 100.&amp;quot;
      self.input_radius
    end
  end

  def list_meetups
    puts &amp;quot;Today #{todays_date} are the following meetups:&amp;quot;
    puts &amp;lt;&amp;lt;~HEREDOC
    1. 2:30PM - Developer Launchpad Nashville - Coding Jam - 19 Developers going
    2. 9:00AM - Score Nashville Events, Networking and Workshops - Join us for a &amp;quot;Start your Business&amp;quot; workshop! - 2 Members going
    3. 10:00AM - Paid to Speak Entrepreneurs - How To Get Your Speaking Career Started - 18 Members Going
    HEREDOC
  end

  def again?
    puts &amp;quot;Would you like to search again? [Y/N]&amp;quot;
    input = gets.strip.downcase
    puts input == &amp;quot;y&amp;quot; || input == &amp;quot;yes&amp;quot; ? call : &amp;quot;Goodbye =)&amp;quot;
  end

end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next up I&amp;rsquo;ll change the &lt;code&gt;HEREDOC&lt;/code&gt; block and utilize an object iteration to list each object. Something like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;meetups.each.with_index(1) do |meetup, i|
  puts &amp;quot;#{i}. #{meetup.time} - #{meetup.group} - #{meetup.event} - #{meetup.attendees}&amp;quot;
end  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now I don&amp;rsquo;t know if this is exactly what I&amp;rsquo;ll end up with but it&amp;rsquo;s what I&amp;rsquo;m thinking at this point in time. I&amp;rsquo;ll also need to have an array with the meetup objects called &lt;code&gt;meetups&lt;/code&gt; in this scenario. For this project I&amp;rsquo;m suppose to record myself coding for 30 minutes so I think when I go to tackle this I&amp;rsquo;ll do that recording. I&amp;rsquo;ll watch the video Avi made another time and get a solid plan of action down and then go for it. Pretty sure they don&amp;rsquo;t want a video of me watching videos hehe.&lt;/p&gt;

&lt;p&gt;Tonight I also installed a couple more packages into Atom. Specifically &lt;a href=&#34;https://atom.io/packages/minimap&#34;&gt;minimap&lt;/a&gt;, &lt;a href=&#34;https://atom.io/packages/seti-icons&#34;&gt;seti-icons&lt;/a&gt;, &lt;a href=&#34;https://atom.io/packages/atom-beautify&#34;&gt;atom-beautify&lt;/a&gt;, &lt;a href=&#34;https://atom.io/packages/highlight-selected&#34;&gt;highlight-selected&lt;/a&gt;, &lt;a href=&#34;https://atom.io/packages/pigments&#34;&gt;pigments&lt;/a&gt;, &lt;a href=&#34;https://atom.io/packages/minimap-highlight-selected&#34;&gt;minimap-highlight-selected&lt;/a&gt;, and &lt;a href=&#34;https://atom.io/packages/minimap-pigments&#34;&gt;minimap-pigments&lt;/a&gt;. I highly recommend them all so check them out.&lt;/p&gt;

&lt;p&gt;Time spent today: 2:22&lt;br /&gt;
Time spent total: 110:57&lt;br /&gt;
Lessons completed today: 0&lt;br /&gt;
Lessons completed total: 285&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 25</title>
      <link>https://itzsaga.github.io/post/day-025/</link>
      <pubDate>Thu, 23 Mar 2017 23:11:22 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-025/</guid>
      <description>&lt;p&gt;So tonight I started my CLI Gem project. This one is going to be in my portfolio and has &lt;strong&gt;A LOT&lt;/strong&gt; more to it. Okay, well maybe not a lot more but it&amp;rsquo;s the first time I&amp;rsquo;m starting from scratch to build something. Luckily, I&amp;rsquo;m not left out to dry and there is a how-to that&amp;rsquo;s over an hour long that Avi did. Of course it&amp;rsquo;s not exactly what I&amp;rsquo;ll need to do and I&amp;rsquo;ll run into problems along the way but it&amp;rsquo;s nice to have a good resource to start with. I&amp;rsquo;m sure I could find a nice video around but having one provided definitely saves some time.&lt;/p&gt;

&lt;p&gt;I decided to build a CLI Gem that will return the meetups in a specified radius from a specific zip code for the current day from &lt;a href=&#34;https://www.meetup.com/&#34;&gt;Meetup.com&lt;/a&gt;. The first big time saver was &lt;code&gt;bundle gem new_gem_name&lt;/code&gt; which basically scaffolded a new gem with the name provided and even initialized it as a git repo. Avi provided a great set of steps to build a Gem:
1. Plan your gem, imagine your interface.
2. Start with the project structure - google.
3. Start with the entry point - the file run.
4. Force that to build the CLI interface.
5. Stub out the interface.
6. Start making things real.
7. Discover objects.
8. Program.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve completed 1-4 in a very basic way now. Next is to stub out my interface with fake data. That will allow me to ensure my flow is working correctly and then basically code to the exact info I need. This work flow is also allowing me to make progress quickly and see the iterations that I&amp;rsquo;m going through to get to the end result. Not much else to share as I didn&amp;rsquo;t do anything too &amp;ldquo;deep&amp;rdquo; today. Just getting started on this project. If you&amp;rsquo;re interested in building your own gem using bundler check out &lt;a href=&#34;http://railscasts.com/episodes/245-new-gem-with-bundler&#34;&gt;RailsCasts #245 New Gem With Bundler&lt;/a&gt;. If you want the walk through that Avi does you&amp;rsquo;ll have to join Flatiron. I&amp;rsquo;m hopefully going to be able to finish this project on Saturday. However, I have a meetup to attend and I have my son this weekend. This will be the first weekend I have my son since I&amp;rsquo;ve started the program. I only have my son one weekend a month so I&amp;rsquo;ll have to see how much time I truly can sacrifice when the kids are awake.&lt;/p&gt;

&lt;p&gt;You can follow along with my progress on project on GitHub &lt;a href=&#34;https://github.com/itzsaga/meetups-around&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Time spent today: 2:29&lt;br /&gt;
Time spent total: 108:35&lt;br /&gt;
Lessons completed today: 0&lt;br /&gt;
Lessons completed total: 285&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 24</title>
      <link>https://itzsaga.github.io/post/day-024/</link>
      <pubDate>Wed, 22 Mar 2017 23:01:17 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-024/</guid>
      <description>&lt;p&gt;&lt;em&gt;yawn&lt;/em&gt; it&amp;rsquo;s been a long day. My 3 month old was up early today. Either way, I got my scraping project done tonight. Nokogiri can be quite particular about the things you use to select content. Turned out I was pretty much there and just needed to change how I was accessing the info I needed.&lt;/p&gt;

&lt;p&gt;Attended a Study Group tonight which taught me something very important. When using &lt;code&gt;pry&lt;/code&gt; inside a loop when you enter &lt;code&gt;exit&lt;/code&gt; into the pry prompt it runs the next loop. This way you can see what is being passed in each time. I was struggling trying to see what was being passed in each time in my scraping project. So now I know and that key piece of info is what helped me finish my scraping project which can be found in full &lt;a href=&#34;https://github.com/itzsaga/oo-student-scraper-v-000&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m calling it a night. I start my first portfolio project tomorrow building a CLI Ruby Gem.&lt;/p&gt;

&lt;p&gt;Time spent today: 2:35&lt;br /&gt;
Time spent total: 106:07&lt;br /&gt;
Lessons completed today: 1&lt;br /&gt;
Lessons completed total: 285&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 23</title>
      <link>https://itzsaga.github.io/post/day-023/</link>
      <pubDate>Tue, 21 Mar 2017 23:15:17 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-023/</guid>
      <description>&lt;p&gt;So working on my scraping project. It&amp;rsquo;s hurting my head. Scraping is no fun to figure out. What I&amp;rsquo;m stuck on right now is iterating. When I have some time tomorrow I&amp;rsquo;m going to work on completely understanding iterating when scraping. Here&amp;rsquo;s what I&amp;rsquo;m looking at currently:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;social-icon-container&amp;quot;&amp;gt;
  &amp;lt;a href=&amp;quot;https://twitter.com/empireofryan&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;social-icon&amp;quot; src=&amp;quot;../assets/img/twitter-icon.png&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
  &amp;lt;a href=&amp;quot;https://www.linkedin.com/in/ryan-johnson-321629ab&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;social-icon&amp;quot; src=&amp;quot;../assets/img/linkedin-icon.png&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
  &amp;lt;a href=&amp;quot;https://github.com/empireofryan&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;social-icon&amp;quot; src=&amp;quot;../assets/img/github-icon.png&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
  &amp;lt;a href=&amp;quot;https://www.youtube.com/watch?v=C22ufOqDyaE&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;social-icon&amp;quot; src=&amp;quot;../assets/img/rss-icon.png&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then I&amp;rsquo;m doing (among other things above it):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;social = doc.css(&amp;quot;.social-icon-container a&amp;quot;)
social.each do |link|
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I&amp;rsquo;m struggling to understand what |link| is inside the loop. I&amp;rsquo;m thinking it&amp;rsquo;s each instance of &lt;code&gt;a&lt;/code&gt; because there are 4 of those and I&amp;rsquo;m setting &lt;code&gt;social&lt;/code&gt; equal to the &lt;code&gt;a&lt;/code&gt;. However, I&amp;rsquo;m not sure. I know when I call &lt;code&gt;doc.css(&amp;quot;.social-icon-container a&amp;quot;)&lt;/code&gt; in pry I end up with Nokogiri&amp;rsquo;s version of everything inside the div. I&amp;rsquo;m sure I&amp;rsquo;ll crush it tomorrow. I know my logic of looping over each &lt;code&gt;a&lt;/code&gt; and using an &lt;code&gt;if&lt;/code&gt; or even &lt;code&gt;case&lt;/code&gt; to check if the &lt;code&gt;img src=&lt;/code&gt; is &lt;code&gt;==&lt;/code&gt; to one of the social networks, then setting the &lt;code&gt;href&lt;/code&gt; value to equal a variable I&amp;rsquo;ll use later is the way to go and solid.&lt;/p&gt;

&lt;p&gt;Time spent today: 2:08&lt;br /&gt;
Time spent total: 103:32&lt;br /&gt;
Lessons completed today: 0&lt;br /&gt;
Lessons completed total: 284&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 22</title>
      <link>https://itzsaga.github.io/post/day-022/</link>
      <pubDate>Mon, 20 Mar 2017 22:51:58 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-022/</guid>
      <description>&lt;p&gt;About 10 minutes before I was suppose to get to my computer the power went out in my subdivision. I quickly realized that while I had setup flashlights in strategic locations in our apartment, when we moved into our house I never did the same. My wife and I both did not have our phones on us and it was &lt;strong&gt;DARK&lt;/strong&gt;. Needless to say I closed the baby gate at the top of the stairs to keep the little ones safe and made my way to the kitchen where I knew a flashlight was. While I was downstairs the power came back on and my daughter yelled out, &amp;ldquo;Thanks Daddy!&amp;rdquo; I&amp;rsquo;ll take credit, yes I will. This put me behind. I then found out that I hadn&amp;rsquo;t installed &lt;a href=&#34;https://zoom.us/&#34;&gt;Zoom&lt;/a&gt; and couldn&amp;rsquo;t get into the Study Group I was planning on attending. I had already decided to &amp;ldquo;take the night off&amp;rdquo; and just do the study group and work on my Tic-Tac-Toe AI some. Needless to say 30 minutes later I confirmed Zoom was working.&lt;/p&gt;

&lt;p&gt;Tonight I realized it&amp;rsquo;s amazing what coming at a project fresh can do. I figured out why my random move in Tic-Tac-Toe wasn&amp;rsquo;t working in less than 3 minutes tonight. I had an &lt;code&gt;=&lt;/code&gt; instead of an &lt;code&gt;==&lt;/code&gt;. However, after that I couldn&amp;rsquo;t get into the groove. I wrote out a couple more methods to decide on the first and second move for the computer but then just left it as random moves after that. I did some TTT strategy ready and came up with the best first move is a corner and the best second move is the center. If the center is taken the best second move is a corner. So I built that logic into the game. From move 3 on the computer plays random. The computer never beat me, it did however, tie a few times with this little bit of knowledge. I have an idea though and want to see if I can pair with someone to implement it. Here&amp;rsquo;s my &lt;em&gt;final&lt;/em&gt; code:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;module Players
  class Computer &amp;lt; Player
    def move(board)
      if board.cells.count{|square| square != &amp;quot; &amp;quot; } == 0
        &amp;quot;1&amp;quot;
      elsif board.cells.count{|square| square != &amp;quot; &amp;quot; } == 1
        board.cells.find_index(&amp;quot;X&amp;quot;) == 4 ? &amp;quot;1&amp;quot; : &amp;quot;5&amp;quot;
      else
        possible_moves = [&amp;quot;1&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;3&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;5&amp;quot;, &amp;quot;6&amp;quot;, &amp;quot;7&amp;quot;, &amp;quot;8&amp;quot;, &amp;quot;9&amp;quot;]
        valid_moves = []
        possible_moves.each do |move|
          valid_moves &amp;lt;&amp;lt; move if board.cells[move.to_i-1] == &amp;quot; &amp;quot;
        end
        valid_moves.sample
      end
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I started on the next project which is a scraping project. I don&amp;rsquo;t have much practice with Nokogiri but on my first attempt I was pulling the data I needed. I can see this project might go quicker than the last two. I&amp;rsquo;m going to hit it hard tomorrow night and get it done.&lt;/p&gt;

&lt;p&gt;Time spent today: 1:33&lt;br /&gt;
Time spent total: 101:24&lt;br /&gt;
Lessons completed today: 1&lt;br /&gt;
Lessons completed total: 284&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 21</title>
      <link>https://itzsaga.github.io/post/day-021/</link>
      <pubDate>Sun, 19 Mar 2017 22:32:36 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-021/</guid>
      <description>&lt;p&gt;Another productive project day means, not much to talk about! I got through all the tests that I needed to for my Tic-Tac-Toe with AI project. I started trying to build out my &amp;ldquo;AI&amp;rdquo; but didn&amp;rsquo;t get very far. I know I need to start simple so I decided to just attempt the computer making random moves. I tried to implement the following work flow:
1. Get the current board array (although this should be passed in by default).
2. Set an array equal to all the possible moves as strings, 1-9.
3. Set a new empty array to collect open squares.
4. Loop over the current board array and if a square is empty &lt;code&gt;= &amp;quot; &amp;quot;&lt;/code&gt; shovel to the array collecting open squares. I will do this by utilizing the possible moves array as the index numbers. I&amp;rsquo;ll just turn each array value into an integer and subtract one.
5. If the board square is empty shovel the possible move string to the empty array collecting open squares.
6. Return a random string from the possible moves array.&lt;/p&gt;

&lt;p&gt;This &lt;em&gt;should&lt;/em&gt; get my computer playing only random open squares. However, my code created an infinite loop and I decided I could call it a day after that. I&amp;rsquo;m hoping I can pair with someone just for the AI part and get it done. If you&amp;rsquo;re interested in the project you can find it on my GitHub &lt;a href=&#34;https://github.com/itzsaga/ttt-with-ai-project-v-000&#34;&gt;here&lt;/a&gt;. My current computer logic (although it might be hard to understand without looking at all the files) is this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;module Players
  class Computer &amp;lt; Player
    def move(board)
      possible_moves = [&amp;quot;1&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;3&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;5&amp;quot;, &amp;quot;6&amp;quot;, &amp;quot;7&amp;quot;, &amp;quot;8&amp;quot;, &amp;quot;9&amp;quot;]
      valid_moves = []
      possible_moves.each do |move|
        valid_moves &amp;lt;&amp;lt; move if board.cells[move.to_i-1] = &amp;quot; &amp;quot;
      end
      valid_moves.sample
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I&amp;rsquo;m sure I&amp;rsquo;ll get at least this little bit of logic working tomorrow even if on my own. Other than that the game works for 2 humans to play!&lt;/p&gt;

&lt;p&gt;So day by day I&amp;rsquo;m enjoying my new OS even more. Today I setup workspaces which just made all of life easier.&lt;/p&gt;

&lt;p&gt;My workspaces overview:&lt;br /&gt;
&lt;img src=&#34;../../images/workspace.png&#34; alt=&#34;Ubuntu Desktop Workspaces&#34; title=&#34;Ubuntu Desktop workspaces overview&#34; /&gt;&lt;br /&gt;
I have one with Atom and the Terminal (I&amp;rsquo;ve since changed to &amp;ldquo;Solarized Light&amp;rdquo; themes on both because I was getting glare during the day):&lt;br /&gt;
&lt;img src=&#34;../../images/workspace-code.png&#34; alt=&#34;Coding Workspace&#34; title=&#34;My coding workspace&#34; /&gt;&lt;br /&gt;
One with Slack:&lt;br /&gt;
&lt;img src=&#34;../../images/workspace-slack.png&#34; alt=&#34;Slack Workspace&#34; title=&#34;My Slack workspace&#34; /&gt;&lt;br /&gt;
Finally, one with Chrome:&lt;br /&gt;
&lt;img src=&#34;../../images/workspace-web.png&#34; alt=&#34;Web Workspace&#34; title=&#34;My web workspace&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I also got &lt;a href=&#34;https://justgetflux.com/&#34;&gt;f.lux&lt;/a&gt; installed today which is one the things on my &lt;strong&gt;must have&lt;/strong&gt; list when it comes to apps on my computers. I even have installed it at shared work computers in the past and freaked some coworkers out the first time they use the computer afterwards. I&amp;rsquo;ll write a post about my biohacks here sometime soon. Maybe when I&amp;rsquo;m done with this set of projects and before I move to the next section. I have more than a few things that I do to keep my mind running in top form. From nootropics to meditation.&lt;/p&gt;

&lt;p&gt;Time spent today: 7:02&lt;br /&gt;
Time spent total: 99:50&lt;br /&gt;
Lessons completed today: 0&lt;br /&gt;
Lessons completed total: 283&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One Way To Pair Program</title>
      <link>https://itzsaga.github.io/post/one-way-to-pair-program/</link>
      <pubDate>Sat, 18 Mar 2017 23:07:23 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/one-way-to-pair-program/</guid>
      <description>&lt;p&gt;Tonight a couple people were wanting to know the best way to pair program together. They had both done the beginning parts of the Tic-Tac-Toe with AI project (the one I&amp;rsquo;m getting ready to start) and wanted to work on the AI part together. The exact question was:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hey @&lt;strong&gt;***&lt;/strong&gt; and I are doing parallel pairing :slightly_smiling_face: what is the best way to go about this, to work on the same repo on separate branches or just copy on paste. She is on IDE, I&amp;rsquo;m on local. Any help muchly appreciated!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The always awesome and helpful instructor &lt;a href=&#34;https://github.com/cernanb&#34;&gt;Cernan Bernardo&lt;/a&gt; quickly gave a how-to that I knew others could use. I&amp;rsquo;m just going to abbreviate what he said and turn it into a numbered list.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Grab each other&amp;rsquo;s SSH URL for your respective GitHub repos.&lt;/li&gt;
&lt;li&gt;In your respective terminals (local or IDE) you would each run the command &lt;code&gt;git remote add upstream *copy_ssh_url_here*&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;After running those commands when you run &lt;code&gt;git remote -v&lt;/code&gt; you will see two remotes&amp;hellip;one for your origin which is your respective GitHub repo and one for upstream which is your partner&amp;rsquo;s repo.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now the setup is done, here is the work flow to be done &lt;em&gt;before&lt;/em&gt; either starts working on the app:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Run &lt;code&gt;git pull upstream master&lt;/code&gt;&amp;hellip;this will pull down any code your partner has added to the app and pushed up to their GitHub.&lt;/li&gt;
&lt;li&gt;Work on your part of the app.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;git push&lt;/code&gt; or &lt;code&gt;git push origin master&lt;/code&gt;&amp;hellip;this will push your new code to YOUR repo.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;With that work flow you will each have your code in sync. Just remember to &lt;em&gt;pull before you push&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So there you have it. Questions feel free to ask and I&amp;rsquo;ll ask Cernan ;-)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>