<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My Flatiron Journey</title>
    <link>https://itzsaga.github.io/index.xml</link>
    <description>Recent content on My Flatiron Journey</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Apr 2017 23:07:58 -0500</lastBuildDate>
    <atom:link href="https://itzsaga.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Make It Look nice</title>
      <link>https://itzsaga.github.io/post/day-047/</link>
      <pubDate>Fri, 14 Apr 2017 23:07:58 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-047/</guid>
      <description>&lt;p&gt;So about that not being fancy that I talked about last night. I took a good chunk of time today and figured out how to implement &lt;a href=&#34;https://getbootstrap.com/&#34;&gt;Bootstrap&lt;/a&gt; in my portfolio project. I figured this was my first web app and should probably look somewhat nice. I have a navbar that changes if you&amp;rsquo;re logged in or not and then I&amp;rsquo;m using the form and typography stylings. It&amp;rsquo;s definitely taking me longer to write my forms out and I&amp;rsquo;m making sure my app actually will look good so that is taking more time as well. However, I think I&amp;rsquo;m going to be more proud of this when I&amp;rsquo;m done. You can follow my progress on my project &lt;a href=&#34;https://github.com/itzsaga/neighbor_tracker&#34;&gt;here&lt;/a&gt;. Although, that link might break in the future as I&amp;rsquo;ll probably renanme my repo to something less stalkerish lol.&lt;/p&gt;

&lt;p&gt;It took me a long time to get my naming correct for my &lt;code&gt;has_many&lt;/code&gt; to &lt;code&gt;has_many&lt;/code&gt; relationship. Between the models and the db it was a mistake in what needed to be plural that ultimately took some time to figure out. I&amp;rsquo;m happy that I don&amp;rsquo;t have to keep up with these associations in any complex manner. I don&amp;rsquo;t know why but I&amp;rsquo;m exhausted right now. I&amp;rsquo;m usually still humming along at 11:15pm but not tonight. I&amp;rsquo;m fighting to stay awake. I made some great progress today on my Sinatra project and I&amp;rsquo;m happy with where I&amp;rsquo;m at. I could&amp;rsquo;ve been closer to being done but I know that I&amp;rsquo;ll be more proud to show off my project because of how it looks.&lt;/p&gt;

&lt;p&gt;Time spent today: 6:20&lt;br /&gt;
Time spent total: 188:40&lt;br /&gt;
Lessons completed today: 0&lt;br /&gt;
Lessons completed total: 405&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Crushing Fwitter Tonight was Sweet</title>
      <link>https://itzsaga.github.io/post/day-046/</link>
      <pubDate>Thu, 13 Apr 2017 23:44:28 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-046/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s late so I&amp;rsquo;ll be brief. I crushed &lt;a href=&#34;https://github.com/itzsaga/sinatra-fwitter-group-project-v-000&#34;&gt;my project&lt;/a&gt; tonight and I&amp;rsquo;m ready to start my Sinatra portfolio project tomorrow. I think I can have an ugly version (desktown down design, raw forms, no nav bar or footer) done tomorrow at some point and then leave it alone until after my project review with an instructor. We&amp;rsquo;ll see how that goes. The requirements are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Build an MVC Sinatra Application.&lt;/li&gt;
&lt;li&gt;Use ActiveRecord with Sinatra.&lt;/li&gt;
&lt;li&gt;Use Multiple Models.&lt;/li&gt;
&lt;li&gt;Use at least one &lt;code&gt;has_many&lt;/code&gt; relationship&lt;/li&gt;
&lt;li&gt;Must have user accounts. The user that created a given piece of content should be the only person who can modify that content&lt;/li&gt;
&lt;li&gt;You should validate user input to ensure that bad data isn&amp;rsquo;t created&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So it might be ambitious to think I can finish that in a day or two but I&amp;rsquo;m confident I can with what I have planned.&lt;/p&gt;

&lt;p&gt;I was able to utilize Active Record Validations tonight. I also included HTML5 &lt;code&gt;required&lt;/code&gt; tags in my forms. However, the tests were sending raw params data to the post route so it was bypassing utilizing my forms to test. I guess this is good though because it creates a situation where if someone sends bad data to the server through a method other than the server it&amp;rsquo;ll reject it. However, I wouldn&amp;rsquo;t want the server hit every time a bad form is input. Maybe a combo of the two makes sense? That way data is validated in the browser and when being saved to the server. Here&amp;rsquo;s what an Active Record Validation looks like from &lt;a href=&#34;http://guides.rubyonrails.org/active_record_validations.html&#34;&gt;Rails Guides&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class Person &amp;lt; ApplicationRecord
  validates :name, presence: true
end
 
Person.create(name: &amp;quot;John Doe&amp;quot;).valid? # =&amp;gt; true
Person.create(name: nil).valid? # =&amp;gt; false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I also decided to buy the &lt;a href=&#34;http://castirondesign.com/work/eco-pocket-sized-notebook&#34;&gt;Cast Iron Design Eco Pocket-Sized Notebook&lt;/a&gt; pack of 3 to start. I realized that AMEX is offering a bonus if you redeem points towards purchases until the end of the month. While redemption values are almost always lowest when using AMEX points for bill credits with the 20% bump it&amp;rsquo;s worth using for a few small things. Considering we have 70k of them $12 won&amp;rsquo;t make a dent in that. I still plan to get a &lt;a href=&#34;https://www.codeandquill.com/collections/notebooks/products/origin&#34;&gt;Code &amp;amp; Quill Origin&lt;/a&gt; when they&amp;rsquo;re not sold out anymore. The fact that there are spacing markers that will make written code look good is sweet (not like you can&amp;rsquo;t do that on graph paper but still).&lt;/p&gt;

&lt;p&gt;I think one of the biggest things I&amp;rsquo;ve been doing that has helped me not get bogged down as I&amp;rsquo;m moving through the curriculum and projects is to not get too fancy. I&amp;rsquo;m also not overthinking it. I&amp;rsquo;m being very straightforward in what I&amp;rsquo;m putting together and making things that work. Could pretty much everything be &lt;em&gt;better&lt;/em&gt;? Yes. However, I&amp;rsquo;m looking to have a body of work to present. I honestly feel that when it comes job hiring time the strength of the code will outweigh the shiny UI&amp;rsquo;s. I still plan on going back and polishing everything up and making it look nice (or at least nicer) than the project requirements require.&lt;/p&gt;

&lt;p&gt;Time spent today: 3:13&lt;br /&gt;
Time spent total: 182:20&lt;br /&gt;
Lessons completed today: 1&lt;br /&gt;
Lessons completed total: 405&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Writing it Down Always Helps</title>
      <link>https://itzsaga.github.io/post/day-045/</link>
      <pubDate>Wed, 12 Apr 2017 23:10:02 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-045/</guid>
      <description>&lt;p&gt;Taking it easy tonight. I have to get some work done for &lt;a href=&#34;http://giftofadoption.org/&#34;&gt;Gift of Adoption Fund&lt;/a&gt;, the non-profit I volunteer on the board for here in TN. Shameless plug, &lt;a href=&#34;https://www.facebook.com/GiftofAdoptionTennessee/&#34;&gt;Like our Facebook Page&lt;/a&gt; please. I finished up the NYC lab in &amp;lt;30 minutes. The second controller and views were much more simple. I didn&amp;rsquo;t get a chance to refactor my code yet. However, I don&amp;rsquo;t think a helper methods are needed as I didn&amp;rsquo;t use that code anywhere in my other controller. Maybe though, maybe. I watched the two lecture videos and finished my DB migrations and building out the models on my first Sinatra project as well tonight. I still go back and forth with feeling like I&amp;rsquo;m getting enough accomplished each day but hitting milestones and goals (even if 3 days late) feels good. My wife is off Friday so hopefully that&amp;rsquo;ll allow me some good time to get work done since we have a birthday party Saturday and it&amp;rsquo;s Easter on Sunday.&lt;/p&gt;

&lt;p&gt;On another note, I&amp;rsquo;m trying to figure out a notebook to buy. I&amp;rsquo;ve used Moleskine&amp;rsquo;s in the past. Nothing against them but not what I&amp;rsquo;m looking for right now. Field Notes seem expensive for what they are and you&amp;rsquo;re paying for the cool factor more than the notebook. So, I did some research. Deciding between the &lt;a href=&#34;http://castirondesign.com/work/eco-pocket-sized-notebook&#34;&gt;Cast Iron Design Eco Pocket-Sized Notebook&lt;/a&gt;, any of the &lt;a href=&#34;https://www.codeandquill.com/collections/notebooks&#34;&gt;Code &amp;amp; Quill&lt;/a&gt; books although at this price I&amp;rsquo;d go hardcover, &lt;a href=&#34;https://www.wordnotebooks.com/products/word-notebooks-dot-grid&#34;&gt;Word. Dot Grid&lt;/a&gt; because it&amp;rsquo;s Field Notes but not, or &lt;a href=&#34;http://www.muji.us/store/recycled-paper-bind-notebook-grid-30-sheets-a5-dark-gray4548076398349.html&#34;&gt;MUJI Recycled Paper Bing Notebook A5&lt;/a&gt; because they&amp;rsquo;re dirt cheap. Let me know what you think. I&amp;rsquo;m leaning towards Code &amp;amp; Quill most likely. I think the larger hardcover books will be benneficial to have segmented by language and framework. I can create personal reference libraries in them and add as time goes on. I can have a master Ruby book, a JS book, a Rails book, is the thought at least. Or maybe I start with smaller books and if a top turns in to two books it gets a C&amp;amp;Q book and I transcribe over what I already have which wouldn&amp;rsquo;t be much at that point.&lt;/p&gt;

&lt;p&gt;Time spent today: 1:50&lt;br /&gt;
Time spent total: 179:08&lt;br /&gt;
Lessons completed today: 3&lt;br /&gt;
Lessons completed total: 404&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Helper Methods Tested, How to Not Repeat Yourself</title>
      <link>https://itzsaga.github.io/post/day-044/</link>
      <pubDate>Tue, 11 Apr 2017 23:16:24 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-044/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m on a killer roll right now blowing through this NYC lab. Built my 3 tables and 1 &lt;code&gt;JOIN&lt;/code&gt; table migrations. Built out the associated models. Built out all the views and one controller. Have one controller and it&amp;rsquo;s views left now. If I didn&amp;rsquo;t have kids that were going to wake me up between 6:30am and 8:00am I&amp;rsquo;d finish it up. I think it&amp;rsquo;ll take me maybe 30 more mins (mostly because &lt;strong&gt;A LOT&lt;/strong&gt; of it is going to be similar to the controller &amp;amp; views I just built) but sleep is needed. I also need to finish doing my part of the household chores (dishes tonight) before bed so in the interest of rest I&amp;rsquo;ve stopped.&lt;/p&gt;

&lt;p&gt;However, I&amp;rsquo;m pretty hype and think I&amp;rsquo;ll still be on schedule to finish the review videos tomorrow night. I also feel more confident about attacking the portfolio project. The only part I haven&amp;rsquo;t really dug into is the UI. I figure a basic bootstrap will do. Utilize the &lt;code&gt;layout.erb&lt;/code&gt; to have a consistent header and footer and I&amp;rsquo;ll be happy at this point in time (when that time comes).&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m contemplating creating helper methods for my controllers. Currently the one controller I finished tonight (I&amp;rsquo;ll do the other and all it&amp;rsquo;s views tomorrow) is:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class FiguresController &amp;lt; ApplicationController

  get &#39;/figures&#39; do
    @figures = Figure.all
    erb :&#39;figures/index&#39;
  end

  get &#39;/figures/new&#39; do
    @figures = Figure.all
    @landmarks = Landmark.all
    @titles = Title.all
    erb :&#39;figures/new&#39;
  end

  get &#39;/figures/:id&#39; do
    @figure = Figure.find(params[:id])
    erb :&#39;figures/show&#39;
  end

  post &#39;/figures/:id&#39; do
    @figure = Figure.find(params[:id])
    @figure.update(params[:figure])

    if !params[:title][:name].empty?
      if !!params[:figure][:title_ids]
        params[:figure][:title_ids] &amp;lt;&amp;lt; Title.create(params[:title]).id
      else
        params[:figure][:title_ids] = []
        params[:figure][:title_ids] &amp;lt;&amp;lt; Title.create(params[:title]).id
      end
    end
    @figure.title_ids = params[:figure][:title_ids]

    if !params[:landmark][:name].empty?
      if !!params[:figure][:landmark_ids]
        params[:figure][:landmark_ids] &amp;lt;&amp;lt; Landmark.create(params[:landmark]).id
      else
        params[:figure][:landmark_ids] = []
        params[:figure][:landmark_ids] &amp;lt;&amp;lt; Landmark.create(params[:landmark]).id
      end
    end
    @figure.landmark_ids = params[:figure][:landmark_ids]

    @figure.save

    redirect to &amp;quot;/figures/#{@figure.id}&amp;quot;
  end

  get &#39;/figures/:id/edit&#39; do
    @figure = Figure.find(params[:id])
    @landmarks = Landmark.all
    @titles = Title.all
    erb :&#39;figures/edit&#39;
  end

  post &#39;/figures&#39; do
    @figure = Figure.create(params[:figure])

    if !params[:title][:name].empty?
      if !!params[:figure][:title_ids]
        params[:figure][:title_ids] &amp;lt;&amp;lt; Title.create(params[:title]).id
      else
        params[:figure][:title_ids] = []
        params[:figure][:title_ids] &amp;lt;&amp;lt; Title.create(params[:title]).id
      end
    end
    @figure.title_ids = params[:figure][:title_ids]

    if !params[:landmark][:name].empty?
      if !!params[:figure][:landmark_ids]
        params[:figure][:landmark_ids] &amp;lt;&amp;lt; Landmark.create(params[:landmark]).id
      else
        params[:figure][:landmark_ids] = []
        params[:figure][:landmark_ids] &amp;lt;&amp;lt; Landmark.create(params[:landmark]).id
      end
    end
    @figure.landmark_ids = params[:figure][:landmark_ids]

    @figure.save

    redirect to &amp;quot;/figures/#{@figure.id}&amp;quot;
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The main parts thar violate DRY (don&amp;rsquo;t repeat yourself) should be readily evident in:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;if !params[:title][:name].empty?
  if !!params[:figure][:title_ids]
    params[:figure][:title_ids] &amp;lt;&amp;lt; Title.create(params[:title]).id
  else
    params[:figure][:title_ids] = []
    params[:figure][:title_ids] &amp;lt;&amp;lt; Title.create(params[:title]).id
  end
end
@figure.title_ids = params[:figure][:title_ids]

if !params[:landmark][:name].empty?
  if !!params[:figure][:landmark_ids]
    params[:figure][:landmark_ids] &amp;lt;&amp;lt; Landmark.create(params[:landmark]).id
  else
    params[:figure][:landmark_ids] = []
    params[:figure][:landmark_ids] &amp;lt;&amp;lt; Landmark.create(params[:landmark]).id
  end
end
@figure.landmark_ids = params[:figure][:landmark_ids]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Not only are these lines with a nested &lt;code&gt;if&lt;/code&gt; statement not elegant but they are carbon copies of each other. In addition, I forsee using almost the same exact methods in my other controller. I&amp;rsquo;ll probably have one of these &lt;code&gt;if&lt;/code&gt; blocks utilizing &lt;code&gt;figure_ids&lt;/code&gt; but other than that it&amp;rsquo;ll be pretty close. We&amp;rsquo;ll see and if that&amp;rsquo;s true I&amp;rsquo;ll definitely create 3 helper methods and just use those if I can. It&amp;rsquo;ll be good practice in building helper methods for the controller because I haven&amp;rsquo;t done that before. I&amp;rsquo;ve built a module for the models in my last lab.&lt;/p&gt;

&lt;p&gt;A note I took that didn&amp;rsquo;t make sense at the time was:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Define helper methods in the Application Controller&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After tonight I see exactly why. This is because the individual controllers (at least in my case) are inherting from the app controller. I was thinking initially I would have to create a &lt;code&gt;Helper&lt;/code&gt; class of some sort and then utilize them that way but I have this basically empty file that the controllers are already using so it makes sense to put helper methods right in there.&lt;/p&gt;

&lt;p&gt;Time spent today: 2:09&lt;br /&gt;
Time spent total: 177:17&lt;br /&gt;
Lessons completed today: 0&lt;br /&gt;
Lessons completed total: 401&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Improved Playlister with Quick Superior Code</title>
      <link>https://itzsaga.github.io/post/day-043/</link>
      <pubDate>Mon, 10 Apr 2017 23:29:20 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-043/</guid>
      <description>&lt;p&gt;Got a large lab done tonight. Right on schedule. I was done 2 minutes after 11pm. I basically took the Music Library CLI app that I made earlier in the curriculum and turned it into a much more user friendly Sinatra MVC web app. The final code can be found &lt;a href=&#34;https://github.com/itzsaga/playlister-sinatra-v-000&#34;&gt;here&lt;/a&gt;. The biggest challenge I had was setting up my databases and models. Actually, just with the &lt;code&gt;JOIN&lt;/code&gt; table. However, I know the more I do this the easier it will get. It&amp;rsquo;s still &lt;strong&gt;very&lt;/strong&gt; new and a complex thing to grasp.&lt;/p&gt;

&lt;p&gt;I also attended a study group this afternoon and saw another student&amp;rsquo;s Sinatra portfolio project he was working on. After quickly glancing at the project info, this line gave me an idea for my project:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The app should be a custom app that is created to track something important to you.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since my family just moved into a new neighborhood in January I&amp;rsquo;ve been keeping track of who our neighbors are in an EverNote Doc. Pretty much, address, matriarch, patriarch and kids with ages. I figured I could have 3 tables in this app. One for the House with an address. Then the House &lt;code&gt;has_many&lt;/code&gt; Parents and &lt;code&gt;has_many&lt;/code&gt; Kids through Parents. Parents with Name and Phone Number values. Parents will &lt;code&gt;belongs_to&lt;/code&gt; a House and &lt;code&gt;has_many&lt;/code&gt; Kids. Kids will have name, age, and sex fields (for those unisex names). Kids will &lt;code&gt;has_many&lt;/code&gt; Parents and &lt;code&gt;belongs_to&lt;/code&gt; a House through Parents. I told my instructor this briefly during the study group and he said that was more than enough to fulfill the requirements of the project. All the project requires is a single &lt;code&gt;has_many&lt;/code&gt; relationship in terms of the database aspect.&lt;/p&gt;

&lt;p&gt;I also asked about if there was a preference between &lt;a href=&#34;http://guides.rubyonrails.org/active_record_validations.html&#34;&gt;Active Record Validations&lt;/a&gt; or &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Form_validation&#34;&gt;HTML5 Form Validations&lt;/a&gt;. He said HTML5 form validations were further in the curriculum so most would not be using them at this point in time. However, it&amp;rsquo;s just use case choice. Of course, HTML5 form validations won&amp;rsquo;t hit the DB so there&amp;rsquo;s that as well he said. I didn&amp;rsquo;t realize how complex HTML5 form validation was until I looked it up (see the link at the beginning of this paragraph) and now I realize why it isn&amp;rsquo;t taught until later. I was thinking of simple input contraints like those found &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&#34;&gt;here&lt;/a&gt;. Now there are some things that must hit the server to validate. For example, if you wanted to ensure an email address hadn&amp;rsquo;t been registered already there is only one way to check that. This is where something like Active Record&amp;rsquo;s &lt;a href=&#34;http://guides.rubyonrails.org/active_record_validations.html#uniqueness&#34;&gt;uniqueness helper&lt;/a&gt; comes into play. I&amp;rsquo;m not sure how far down this rabbit hole I&amp;rsquo;ll go building out my project. Maybe just a simple &lt;code&gt;&amp;lt;type=&amp;quot;tel&amp;quot;&amp;gt;&lt;/code&gt; in what I was thinking of above. Although, since this is a portfolio project I&amp;rsquo;ll make sure to keep a set of features I want to implement to improve the app. I&amp;rsquo;ll make sure to work on getting these things done when the job hunt starts. Currently the goal is to get to that point as quickly as possible so I&amp;rsquo;m completing projects with close to the bare minimum requirements.&lt;/p&gt;

&lt;p&gt;Time spent today: 3:16&lt;br /&gt;
Time spent total: 175:09&lt;br /&gt;
Lessons completed today: 1&lt;br /&gt;
Lessons completed total: 401&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Launching Through Roadblocks Quickly is Monumental Now</title>
      <link>https://itzsaga.github.io/post/day-042/</link>
      <pubDate>Sun, 09 Apr 2017 23:22:15 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-042/</guid>
      <description>&lt;p&gt;Today was the day of road blocks. I spent probably 3 hours working with Learn Experts on problems. For the most part these were dev environment issues or weird test issues and not working through my code and learning new things. I did learn some things about debugging though. I learned to check my Gemfile because if a gem is missing weird things happen. I&amp;rsquo;m not sure how I was able to run &lt;code&gt;shotgun&lt;/code&gt; without having the gem in the Gemfile but it worked and then I got odd errors in my browser. Easy fix once it was figured out but that took an hour. I also learned that when doing TDD work on each test as you go rather than the entire thing. I had two forms that were very similar so I copied and pasted the first into the code for the second. I made all the edits I thought I needed to and then ran the tests. I kept getting an odd error saying an element wasn&amp;rsquo;t there but I knew it was. Turns out code further down in my form was breaking my entire view and thus Capybara was unable to read the entire page. If it can&amp;rsquo;t read the page at all of course the element will be missing. So I commented out the rest of the code and worked test by test after that and had much more success. However, figuring this out took another hour tonight.&lt;/p&gt;

&lt;p&gt;All this time having others review my code let me beat my brother in a game of chess :-). If you want to play me you can find me on &lt;a href=&#34;https://www.chess.com/&#34;&gt;Chess.com&lt;/a&gt; at my profile &lt;a href=&#34;https://www.chess.com/member/itzsaga&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I also learned more about databases and how I&amp;rsquo;ll utilize them with ActiveRecord in my Sinatra apps. Specifically I know that the JOIN table will come up again in the future. As this is one of the more confusing topics I made sure to save this overview:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A join table is a table that only has two columns. To keep up with the online store example, this table would contain a &lt;code&gt;user_id&lt;/code&gt; and &lt;code&gt;item_id&lt;/code&gt;. Each row in this table would contain a user&amp;rsquo;s ID and an item&amp;rsquo;s ID. We call this join table &lt;code&gt;user_items&lt;/code&gt;. The &lt;code&gt;has_many :through&lt;/code&gt; is always singular and in the first part of the join table name, and the &lt;code&gt;belongs_to&lt;/code&gt; portion of the relationship is pluralized in the second part of the table name.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;m 2 labs and 2 lectures behind my goal :-(. New goal is to be done with these 4 things by Wednesday night. I think I can finish each lab in a 3 hour sitting so that&amp;rsquo;s Monday and Tuesday night then watch the lectures on Wednesday. I looked and I&amp;rsquo;m about 10 hours behind the amount of time I wanted to code this week and that&amp;rsquo;s basically what I missed it by. I need to reup on my strict adherence to my schedule. While I&amp;rsquo;m moving along I could be further along than I am and closer to being employed at this point in time. I&amp;rsquo;m dreading the feeling I&amp;rsquo;ll have if I make that one extra tuition payment when I know it could&amp;rsquo;ve been avoided.&lt;/p&gt;

&lt;p&gt;Time spent today: 6:47&lt;br /&gt;
Time spent total: 171:53&lt;br /&gt;
Lessons completed today: 8&lt;br /&gt;
Lessons completed total: 400&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I suddenly know how it all fits together better.</title>
      <link>https://itzsaga.github.io/post/day-041/</link>
      <pubDate>Sat, 08 Apr 2017 23:21:55 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-041/</guid>
      <description>&lt;p&gt;I moved through a lot of curriculum today. However, I really want to hit the goal I set two weeks ago and I&amp;rsquo;m on the cusp of it! I had 21 lessons/labs to go for my goal when I checked early in the day. So I set a goal of 11 more today (I had laready finished 2) and finish tomorrow. I missed it by one only because it&amp;rsquo;s late and I hit an hour and a half review lecture. Since I&amp;rsquo;m working on ActiveRecord sessions and authentication I want to pay better attention to this lecture than I usually do. Maybe even take a note or two :-).&lt;/p&gt;

&lt;p&gt;Ealy in the day I got stuck on a nested forms lab. I was getting an error:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Failures:
  1) App POST /teams submits the form
     Failure/Error: click_button &#39;submit&#39;
     TypeError:
       expected Hash (got String) for param `name&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;but I couldn&amp;rsquo;t figure out why. My code was:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;h1&amp;gt;Create a Team and Heroes!&amp;lt;/h1&amp;gt;
&amp;lt;form action=&amp;quot;/teams&amp;quot; method=&amp;quot;POST&amp;quot;&amp;gt;
  &amp;lt;p&amp;gt;Team Name: &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;team[name]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;p&amp;gt;Team Motto: &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;team[motto]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;h2&amp;gt;Hero 1&amp;lt;/h2&amp;gt;
  &amp;lt;p&amp;gt;Hero&#39;s Name: &amp;lt;input id=&amp;quot;member1_name&amp;quot; type=&amp;quot;text&amp;quot; name=&amp;quot;team[name][hero][][name]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;p&amp;gt;Hero&#39;s Power: &amp;lt;input id=&amp;quot;member1_power&amp;quot; type=&amp;quot;text&amp;quot; name=&amp;quot;team[name][hero][][power]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;p&amp;gt;Hero&#39;s Biography: &amp;lt;input id=&amp;quot;member1_bio&amp;quot; type=&amp;quot;text&amp;quot; name=&amp;quot;team[name][hero][][bio]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;h2&amp;gt;Hero 2&amp;lt;/h2&amp;gt;
  &amp;lt;p&amp;gt;Hero&#39;s Name: &amp;lt;input id=&amp;quot;member2_name&amp;quot; type=&amp;quot;text&amp;quot; name=&amp;quot;team[name][hero][][name]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;p&amp;gt;Hero&#39;s Power: &amp;lt;input id=&amp;quot;member2_power&amp;quot; type=&amp;quot;text&amp;quot; name=&amp;quot;team[name][hero][][power]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;p&amp;gt;Hero&#39;s Biography: &amp;lt;input id=&amp;quot;member2_bio&amp;quot; type=&amp;quot;text&amp;quot; name=&amp;quot;team[name][hero][][bio]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;h2&amp;gt;Hero 3&amp;lt;/h2&amp;gt;
  &amp;lt;p&amp;gt;Hero&#39;s Name: &amp;lt;input id=&amp;quot;member3_name&amp;quot; type=&amp;quot;text&amp;quot; name=&amp;quot;team[name][hero][][name]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;p&amp;gt;Hero&#39;s Power: &amp;lt;input id=&amp;quot;member3_power&amp;quot; type=&amp;quot;text&amp;quot; name=&amp;quot;team[name][hero][][power]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;p&amp;gt;Hero&#39;s Biography: &amp;lt;input id=&amp;quot;member3_bio&amp;quot; type=&amp;quot;text&amp;quot; name=&amp;quot;team[name][hero][][bio]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;button type=&amp;quot;submit&amp;quot; value=&amp;quot;submit&amp;quot;&amp;gt;Submit&amp;lt;/button&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I kept thinking, &amp;ldquo;How can form input be anything other than a String? Why is it expecting a hash?&amp;rdquo; I reached out to a Learn Expert (they&amp;rsquo;re like Teaching Assistants who are available almost &lt;sup&gt;24&lt;/sup&gt;&amp;frasl;&lt;sub&gt;7&lt;/sub&gt; to help) and it took almost an hour to resolve it. However, figured out that because my third line had &lt;code&gt;name=&amp;quot;team[name]&lt;/code&gt; whenever I called a nested hash that contained &lt;code&gt;team[name]&lt;/code&gt; it was returning the string I input instead of setting the params nested hash array to the proper thing. A quick change of my code to:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;h1&amp;gt;Create a Team and Heroes!&amp;lt;/h1&amp;gt;
&amp;lt;form action=&amp;quot;/teams&amp;quot; method=&amp;quot;POST&amp;quot;&amp;gt;
  &amp;lt;p&amp;gt;Team Name: &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;team[name]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;p&amp;gt;Team Motto: &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;team[motto]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;h2&amp;gt;Hero 1&amp;lt;/h2&amp;gt;
  &amp;lt;p&amp;gt;Hero&#39;s Name: &amp;lt;input id=&amp;quot;member1_name&amp;quot; type=&amp;quot;text&amp;quot; name=&amp;quot;team[hero][][name]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;p&amp;gt;Hero&#39;s Power: &amp;lt;input id=&amp;quot;member1_power&amp;quot; type=&amp;quot;text&amp;quot; name=&amp;quot;team[hero][][power]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;p&amp;gt;Hero&#39;s Biography: &amp;lt;input id=&amp;quot;member1_bio&amp;quot; type=&amp;quot;text&amp;quot; name=&amp;quot;team[hero][][bio]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;h2&amp;gt;Hero 2&amp;lt;/h2&amp;gt;
  &amp;lt;p&amp;gt;Hero&#39;s Name: &amp;lt;input id=&amp;quot;member2_name&amp;quot; type=&amp;quot;text&amp;quot; name=&amp;quot;team[hero][][name]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;p&amp;gt;Hero&#39;s Power: &amp;lt;input id=&amp;quot;member2_power&amp;quot; type=&amp;quot;text&amp;quot; name=&amp;quot;team[hero][][power]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;p&amp;gt;Hero&#39;s Biography: &amp;lt;input id=&amp;quot;member2_bio&amp;quot; type=&amp;quot;text&amp;quot; name=&amp;quot;team[hero][][bio]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;h2&amp;gt;Hero 3&amp;lt;/h2&amp;gt;
  &amp;lt;p&amp;gt;Hero&#39;s Name: &amp;lt;input id=&amp;quot;member3_name&amp;quot; type=&amp;quot;text&amp;quot; name=&amp;quot;team[hero][][name]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;p&amp;gt;Hero&#39;s Power: &amp;lt;input id=&amp;quot;member3_power&amp;quot; type=&amp;quot;text&amp;quot; name=&amp;quot;team[hero][][power]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;p&amp;gt;Hero&#39;s Biography: &amp;lt;input id=&amp;quot;member3_bio&amp;quot; type=&amp;quot;text&amp;quot; name=&amp;quot;team[hero][][bio]&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;button type=&amp;quot;submit&amp;quot; value=&amp;quot;submit&amp;quot;&amp;gt;Submit&amp;lt;/button&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and my tests were all passing.&lt;/p&gt;

&lt;p&gt;I also realized today that I&amp;rsquo;ve been achieving the end goal of clearing out hashes without using the method provided by ruby. When I read:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Luckily for us, there is already a Ruby method for emptying a hash: #clear.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I thought to myself, &amp;ldquo;Whoops!&amp;rdquo; because I&amp;rsquo;ve just been resetting hashes &amp;amp; arrays by doing &lt;code&gt;@session = {}&lt;/code&gt; or &lt;code&gt;@@all = []&lt;/code&gt; up until this point. I haven&amp;rsquo;t checked the docs yet to make sure this method applies to arrays as well but I feel like I&amp;rsquo;ve seen it used so I&amp;rsquo;m relatively confident in that. I guess I&amp;rsquo;ll find out the first time I use it.&lt;/p&gt;

&lt;p&gt;Time spent today: 6:37&lt;br /&gt;
Time spent total: 165:06&lt;br /&gt;
Lessons completed today: 12&lt;br /&gt;
Lessons completed total: 392&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Do recruiters make you mad? What&#39;s your advice?</title>
      <link>https://itzsaga.github.io/post/day-040/</link>
      <pubDate>Fri, 07 Apr 2017 23:02:25 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-040/</guid>
      <description>&lt;p&gt;So nested forms aren&amp;rsquo;t as bad as I thought they would be. I guess it helps that I had some good teaching before I got into it. I think I had the longest video yet to watch tonight and that took up most of the time once I finished the lab I started last night. The lab I&amp;rsquo;m on seems to be more of the same just getting the concept to stick with a more in depth nested form. It has an option to persist the data &lt;strong&gt;AFTER&lt;/strong&gt; getting the tests to pass initially. I&amp;rsquo;m not sure if I&amp;rsquo;ll attempt it or not. I know I&amp;rsquo;ll need to know the skill but does it help me more to struggle now and be a little quicker later? Or just struggle later one time? I know doing it more is definitely better but there are concessions I make in the interest of time.&lt;/p&gt;

&lt;p&gt;Learned a good workflow for building a MVC app that uses a databse. First start with the DB, then work on models, then controller routes, and finally the views. I had thought working in the other direction would make more sense but I&amp;rsquo;ll try what the lecture taught. My thinking is, I start with a view so I know what I&amp;rsquo;m trying to display, I&amp;rsquo;ll have my endpoint even if it doesn&amp;rsquo;t work. Then I&amp;rsquo;ll build the route that will fill in that view. Then I&amp;rsquo;ll build the model for the controller to use. Then build the database knowing the full amount of things I&amp;rsquo;ll need. This is how I thought I did the CLI Gem project where I started with the lowest level and worked my way out with stubbed data to get a final point where when I had real data it just worked. This might not be the best workflow when dealing with things like databases and controllers though. There might be things outside of my control that could end up creating a whole rewrite which would be very sad.&lt;/p&gt;

&lt;p&gt;I put in a resume for a Jr. Dev (or was it Jr. Analyst?) role today and the recruiter called me back. To my surprise saying they work with a few companies that take bootcamp grads. The main thing I was told is to finish and get that official certification or diploma saying I finished then we could talk. It&amp;rsquo;s nice to already be connected with someone even if it turns out to be nothing. While I&amp;rsquo;ve worked with recruiters in the past and never received an offer through any assistance they&amp;rsquo;ve given I think any interview is a good one for me moving into a new field. The questions and format will be something completely different from what I&amp;rsquo;m used to. As much as we all wish interviews could be nailed by the best candidate every time they just aren&amp;rsquo;t and interviewing is a skill in and of itself. I&amp;rsquo;m interested if there are any others out there that have used recruiters to land Junior level positions and what they thought about the process in hindsight?&lt;/p&gt;

&lt;p&gt;Time spent today: 2:44&lt;br /&gt;
Time spent total: 158:29&lt;br /&gt;
Lessons completed today: 2&lt;br /&gt;
Lessons completed total: 380&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Take it Easy Sometimes and Still Win</title>
      <link>https://itzsaga.github.io/post/day-039/</link>
      <pubDate>Thu, 06 Apr 2017 22:29:32 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-039/</guid>
      <description>&lt;p&gt;I only got a little bit of coding done tonight by choice. I think I&amp;rsquo;m procrastinating on this nested hash forms lab because nested hashes can get confusing. I started it though and just got sidetracked. I need to stay focused. I worked on getting &lt;a href=&#34;https://www.jetbrains.com/ruby/&#34;&gt;RubyMine&lt;/a&gt; installed to see what it&amp;rsquo;s about and my computer froze. After that I just gave up on coding tonight. I guess I wasn&amp;rsquo;t very motivated if that&amp;rsquo;s all it took lol.&lt;/p&gt;

&lt;p&gt;However, I went to a good Ruby meetup tonight and got home late and am just distracted. I went to the &lt;a href=&#34;https://www.meetup.com/nashrb/&#34;&gt;Nash.rb&lt;/a&gt; 2nd Quarter Social tonight and hung out with people that are in the Ruby community here in Nashville. It was laid back and I just spoke with a bunch of people. A guy named Sam who just moved to Nashville last month and has 3 years of Rails experience yet went to Law school. Chris who graduated from &lt;a href=&#34;https://www.theironyard.com/locations/nashville.html&#34;&gt;The Iron Yard&lt;/a&gt;&amp;rsquo;s Front End program in December and is just interested in Ruby. Pete who&amp;rsquo;s a VP at &lt;a href=&#34;https://takl.com/&#34;&gt;Takl&lt;/a&gt; who are looking for a Senior RoR&amp;rsquo;s dev. Jon and Jim who are both 10+ year devs who talked about their company but never named it. I was able to look at the Meetup RSVP list and then check LinkedIn to see they work for &lt;a href=&#34;http://groups360.com/&#34;&gt;Groups360&lt;/a&gt;. Their company interested me because they&amp;rsquo;re looking to provide a SaaS product to the hospitality industry. Ty who works for &lt;a href=&#34;https://www.kindful.com/&#34;&gt;Kindful&lt;/a&gt; and is somewhat jealous that he had to get a CS degree (75% of which was useless he said) because boot camps didn&amp;rsquo;t exist when he started. I don&amp;rsquo;t know if it&amp;rsquo;s the nootropics I&amp;rsquo;m taking or if I consciously made sure of it but I remembered every person&amp;rsquo;s name I met tonight and was able to say goodnight to them by name as well. This typically doesn&amp;rsquo;t happen.&lt;/p&gt;

&lt;p&gt;I found this meetup to be much more interesting to me than the previous ones I have attended. I think it&amp;rsquo;s because we were interacting well and I was able to speak with all different levels of people. I&amp;rsquo;ve found there is &lt;strong&gt;A LOT&lt;/strong&gt; of JavaScript around, and for good reason, so it as nice to speak to people who knew the things I&amp;rsquo;m currently learning. I&amp;rsquo;m looking forward to the Nash.rb meetups in the future. I&amp;rsquo;m sure I&amp;rsquo;ll get back to enjoying JS meetups as well as soon as I get to the JS curriculum and get back to that.&lt;/p&gt;

&lt;p&gt;Time spent today: 0:33&lt;br /&gt;
Time spent total: 155:45&lt;br /&gt;
Lessons completed today: 0&lt;br /&gt;
Lessons completed total: 378&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 38</title>
      <link>https://itzsaga.github.io/post/day-038/</link>
      <pubDate>Wed, 05 Apr 2017 23:15:15 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-038/</guid>
      <description>&lt;p&gt;Sinatra, and models, and views, and controllers, and erb, OH MY! Tonight I kept building small things with Sinatra. I&amp;rsquo;ve realized exactly how the MVC system works and what each piece does. The model is all the ruby classes I&amp;rsquo;ve been writing. The view is a mixture of HTML and Ruby that the user sees in their browser. The controller takes the user input and returns the data that has been crunched by the models. Now that I&amp;rsquo;m createing the route to a URL, creating the form on that page, sending the data that&amp;rsquo;s input back to the controller, having it sent to a model, having the model return it to the controller, having the controller retrieve a new view and send it to the user, it all makes way more sense. &lt;strong&gt;LOL&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;One thing I think will be a big piece but was only touched on for a moment was yielding.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Let&amp;rsquo;s say we have a controller action:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;get &#39;/&#39; do
 erb :index
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When the above controller action is triggered and the &lt;code&gt;erb&lt;/code&gt; method is called, it looks to see if there is a view titled &lt;code&gt;layout.erb&lt;/code&gt;. If that file exists, it loads that content around the desired erb file, in this case &lt;code&gt;index.erb&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The way the &lt;code&gt;layout.erb&lt;/code&gt; will &amp;ldquo;wrap&amp;rdquo; the &lt;code&gt;index.erb&lt;/code&gt; with it&amp;rsquo;s code when a &lt;code&gt;&amp;lt;%= yield %&amp;gt;&lt;/code&gt; is inserted seemed like something important. Yet, I have yet to use it and I&amp;rsquo;m more than a few lessons past the reeeadme that showcased it. Oh well, that&amp;rsquo;s one of the reasons I write about things here. So when I need to find it I know where to look.&lt;/p&gt;

&lt;p&gt;Time spent today: 2:17&lt;br /&gt;
Time spent total: 155:13&lt;br /&gt;
Lessons completed today: 6&lt;br /&gt;
Lessons completed total: 378&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 37</title>
      <link>https://itzsaga.github.io/post/day-037/</link>
      <pubDate>Tue, 04 Apr 2017 23:11:04 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-037/</guid>
      <description>&lt;p&gt;Sinatra is moving along and clicking well. I have this fear after being somewhat cocky in last night&amp;rsquo;s post that the spirits of those Senior Devs before me are going to jump into my learning and humble me some. If so, not today. It&amp;rsquo;s all making sense the first time through. I think this is because there&amp;rsquo;s very little new logic. It&amp;rsquo;s just where to put that login in regards to models, views and controllers. Like, if I&amp;rsquo;m going to use ruby in a webpage the page with be &lt;code&gt;index.erb&lt;/code&gt; so it can be interpretted and I&amp;rsquo;ll have to wrap code in &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; depending on what I&amp;rsquo;m going to do with it.&lt;/p&gt;

&lt;p&gt;The largest piece of info I learned outside of more of the Sinatra DSL is how &lt;code&gt;params&lt;/code&gt; work.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are unfamiliar with the &lt;code&gt;params&lt;/code&gt; object and how it relates to form and inputs, that&amp;rsquo;s totally fine. The TL;DR is that all the information the user submitted in the form is available to your code within a hash named &lt;code&gt;params&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So for form data for example, let&amp;rsquo;s say we have &lt;code&gt;&amp;lt;input name=&amp;quot;username&amp;quot; value=&amp;quot;&amp;quot; /&amp;gt;&lt;/code&gt; and the form has an input box and in that box is &lt;code&gt;withloudhands&lt;/code&gt; (I don&amp;rsquo;t know why the curriculum chose this as an example lol). &lt;code&gt;withloudhands&lt;/code&gt; is now the &amp;ldquo;current value&amp;rdquo;. Let&amp;rsquo;s say there&amp;rsquo;s also an email input which I won&amp;rsquo;t paint the picture of. The &lt;code&gt;params&lt;/code&gt; hash after this is submitted would be &lt;code&gt;{username:&amp;quot;withloudhands&amp;quot;, email:&amp;quot;yourcoolemail@gmizzle.com&amp;quot;}&lt;/code&gt; and this hash can be used just like any other hash. So &lt;code&gt;params[:username]&lt;/code&gt; would return &lt;code&gt;&amp;quot;withloudhands&amp;quot;&lt;/code&gt;. I did notice that the hash stores everything as strings so when performing math operations I had to utilize the &lt;code&gt;.to_i&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;I also learned that controller actions never care about their return values. This came up when a student suggested using &lt;code&gt;#tap&lt;/code&gt; in a lecture and Avi said that while it would work he didn&amp;rsquo;t think it was the best option. I still haven&amp;rsquo;t dove into what &lt;code&gt;#tap&lt;/code&gt; actually does even though I&amp;rsquo;ve discussed it with Mike in the past. I did come across a great, and quick read, blog post &lt;a href=&#34;https://walwoodr.github.io/2017/03/24/block_yield_tap/&#34;&gt;&amp;ldquo;Block, yield, tap&amp;rdquo;&lt;/a&gt; by the more studious &lt;a href=&#34;https://github.com/walwoodr&#34;&gt;Rachel Walwood&lt;/a&gt; who&amp;rsquo;s also going through Flatiron right now. She goes through exactly what it is in a solid and concise manner.&lt;/p&gt;

&lt;p&gt;Time spent today: 2:19&lt;br /&gt;
Time spent total: 152:56&lt;br /&gt;
Lessons completed today: 7&lt;br /&gt;
Lessons completed total: 372&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 36</title>
      <link>https://itzsaga.github.io/post/day-036/</link>
      <pubDate>Mon, 03 Apr 2017 22:59:43 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-036/</guid>
      <description>&lt;p&gt;I got a late start tonight :-( so I didn&amp;rsquo;t spend as much time as I would&amp;rsquo;ve liked. However, I did learn that my wife &lt;strong&gt;did not&lt;/strong&gt; know that it was not a good idea to try and peel a cantaloupe with a chef&amp;rsquo;s knife. Yeah, so after helping her wrap a sliced finger in a paper towel cantaloupe slicing duty fell on me. Then I spilled my tea all over my desk because one of my children (I&amp;rsquo;m guessing the 2 year old) had wedged my chair under my desk. When I pulled it out it shook the desk and *splash* everything went. My scroll wheel on my mouse is just now starting to work properly again.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m working through &lt;a href=&#34;http://www.sinatrarb.com/&#34;&gt;Sinatra&lt;/a&gt; now and nothing has been too confusing. It all seems pretty straight forward so far. Obviously the more complex a web app gets the more confusing things will be. I&amp;rsquo;m interested to see if we&amp;rsquo;ll be building anything that integrates a database or not. I&amp;rsquo;ll find out in time. I&amp;rsquo;m going to attempt to build out a table with the notes I took on the Model View Controller (MVC) architecture a lot of apps are built on.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Model&lt;/th&gt;
&lt;th&gt;View&lt;/th&gt;
&lt;th&gt;Controller&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Logic&lt;/td&gt;
&lt;td&gt;Front-End&lt;/td&gt;
&lt;td&gt;Middleman&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Brains&lt;/td&gt;
&lt;td&gt;HTML&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;CSS&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Forms&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;ERB*&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Chef&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Guest&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Waiter&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;*ERB stands for Embedded Ruby&lt;/p&gt;

&lt;p&gt;I think the thing that helped my grasping of the MVC the most was the restaurant analogy. The user interacts with the View which in turn interacts with the Controller which talks to the Model and returns back to the View with what the Model sends. So the Guest orders something and the Waiter takes that info to the Chef who then makes the food and sends the waiter back to the Guest with ti.&lt;/p&gt;

&lt;p&gt;Two random things to mention:
1. Check out &lt;a href=&#34;https://informeddelivery.usps.com/box/pages/intro/start.action&#34;&gt;Informed Delivery&lt;/a&gt; from the USPS. I thought it was super cool then I realized you couldn&amp;rsquo;t tell the USPS to not deliver junk so the service seems literally useless.
2. Read &lt;a href=&#34;https://sivers.org/kimo&#34;&gt;There’s no speed limit. (The lessons that changed my life.)&lt;/a&gt; by Derek Sivers. If you have time listen to him on &lt;a href=&#34;http://tim.blog/2015/12/14/derek-sivers-on-developing-confidence-finding-happiness-and-saying-no-to-millions/&#34;&gt;The Tim Ferriss Show&lt;/a&gt; as well.&lt;/p&gt;

&lt;p&gt;The line &lt;strong&gt;“the standard pace is for chumps”&lt;/strong&gt; (from the Sivers article) has always resonated. While I don&amp;rsquo;t think I&amp;rsquo;ve always worked hard enough to prove that true I know I&amp;rsquo;ve seen it. I think about my expectations going into this bootcamp and how long I want it to take. Oh 800+ hours you say? It&amp;rsquo;ll take months you say? Gimme 16 weeks from first day to hired. You obviously don&amp;rsquo;t know me or that I&amp;rsquo;ve already completed a Masters degree 100% online or that I have a near-genius IQ or that I have a bunch of biohacks I&amp;rsquo;m using to crush it.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m going to be very interested to see how many hours I&amp;rsquo;ve put in when I complete Rails as that is approximately 75% of the way through the curriculum. Accordingly it should be about 600 hours of work done at that point.&lt;/p&gt;

&lt;p&gt;Time spent today: 2:01&lt;br /&gt;
Time spent total: 150:37&lt;br /&gt;
Lessons completed today: 10&lt;br /&gt;
Lessons completed total: 365&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 35</title>
      <link>https://itzsaga.github.io/post/day-035/</link>
      <pubDate>Sun, 02 Apr 2017 21:45:14 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-035/</guid>
      <description>&lt;p&gt;Progress progress progress. I&amp;rsquo;m moving along. I watched the last ActiveRecord video then finished up the Rack section. Learning the lowest level of how Rails runs a webserver.  There is a granular procedure that&amp;rsquo;s happening and it was explained. First we learn basic Rack, then Sinatra abstracts a little bit more, then Rails abstracts even more. So when things do break, because they will, there is an understanding of what&amp;rsquo;s actually going on to fix it. This is the exact thing that I hear a lot of people complain about. They buy courses on Udemy or wherever and at the end of the course they have a working app that they can show off, &lt;strong&gt;BUT&lt;/strong&gt;, they can&amp;rsquo;t explain &lt;em&gt;why&lt;/em&gt; or &lt;em&gt;how&lt;/em&gt; it works. I&amp;rsquo;ve fallen into that category in the past. It makes a lot of sense too. If you want to market something you have your students make fast progress and put the impetuous on them to do deeper learning. Like, do people &lt;em&gt;really&lt;/em&gt; want to know how rack works? No. They just want it to work and use Rails because that&amp;rsquo;s easier. I guess that&amp;rsquo;s what seperates those who end up being successful and those who fall to the side self teaching.&lt;/p&gt;

&lt;p&gt;I started this post before finishing my learning for the day. I think this sums it up well:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;WHY SINATRA BEFORE RAILS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ve all heard of &amp;ldquo;Ruby on Rails&amp;rdquo; and how powerful it is. You can build impressive web applications in mere hours! How amazing. Most people, when they learn Rails for the first time, literally say &amp;ldquo;It&amp;rsquo;s like magic!&amp;rdquo;. But we&amp;rsquo;re developers, and we know that magic isn&amp;rsquo;t real and that other smart developers just built an impressive framework.&lt;/p&gt;

&lt;p&gt;That means it&amp;rsquo;s important to understand the basic concepts of Rails before diving into Rails itself. &lt;strong&gt;Enter Sinatra.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sinatra is considered a &lt;em&gt;light weight&lt;/em&gt; framework where the responsibility of app structure and communication falls solely on the developer. Sinatra doesn&amp;rsquo;t give you a lot to get started with. There is no way to auto-generate files and directories, no way for the app to make assumptions about routes, or &amp;ldquo;Sinatra magic&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Because of this, working with Sinatra allows you to dive in deep with the major concepts of MVC, a system for building web applications that governs 90% of the worlds&amp;rsquo; apps. You are required to manually set up routes and connect them to other pieces of your application. Without this manual setup, your application does not automatically know how to communicate with your database or what HTML files to load in the browser. And even more importantly, without a manual setup, you lose connection to the major components of a web application, and in particular, all the moving pieces of MVC.&lt;/p&gt;

&lt;p&gt;So introduce yourself to Sinatra. Get to know it, and know it well. The better your foundation, the more you&amp;rsquo;ll be able to know (and like) Rails.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A few other things that I picked up today. First, is that there are a bunch of other lorem ipsum word blocks out there and they&amp;rsquo;re typically pretty funny. There are some good ones in this &lt;a href=&#34;https://www.sitepoint.com/10-lorem-ipsum-alternatives/&#34;&gt;SitePoint article&lt;/a&gt;. The one that Avi used is called &lt;a href=&#34;https://hipsum.co/&#34;&gt;Hipster Ipsum&lt;/a&gt; and made the people watching the lecture at the time ask about it.&lt;/p&gt;

&lt;p&gt;Avi went on a tangent about how he thinks about how his life actually impacts others. How the web is this amazing thing that connects people and not just computers. How the time we&amp;rsquo;re in right now is crazy exciting because we are now as humans more connected and thus are able to do greater things as a species. I honestly don&amp;rsquo;t remember word for word but that&amp;rsquo;s the gist of it. A quote that stuck out to me:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The Web does not connect machines, it connects people.&lt;br /&gt;
- &lt;a href=&#34;https://en.wikipedia.org/wiki/Tim_Berners-Lee&#34;&gt;Tim Berners-Lee&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It&amp;rsquo;s so true when we think about the impact that web apps have on real people. While my code might ultimately be interpreted by machines we don&amp;rsquo;t build things for machines to use. We are building things to connect and solve real problems for people. When I built the Meetup CLI Gem that has the potential to solve someones problem and connect them to other people at a meetup group. It may seem like technology on the surface but in the end it&amp;rsquo;s all about people.&lt;/p&gt;

&lt;p&gt;Even doing minimal work today (time wise) due to a much needed haircut and the wedding shower I went to with my wife at &lt;a href=&#34;http://www.arringtonvineyards.com/&#34;&gt;Arrington Vineyards&lt;/a&gt;, I&amp;rsquo;m right on track with my pace and have finished 48 lessons/labs since last week. :-)&lt;/p&gt;

&lt;p&gt;Time spent today: 3:33&lt;br /&gt;
Time spent total: 148:36&lt;br /&gt;
Lessons completed today: 16&lt;br /&gt;
Lessons completed total: 355&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 34</title>
      <link>https://itzsaga.github.io/post/day-034/</link>
      <pubDate>Sat, 01 Apr 2017 23:00:52 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-034/</guid>
      <description>&lt;p&gt;It was a good day in the coding world of Seth. I started out completing a decent size lab in the ActiveRecord section. Then headed off to the &lt;a href=&#34;https://www.facebook.com/groups/free.code.camp.nashville&#34;&gt;Free Code Camp Nashville&lt;/a&gt; meetup. It was a great meetup where &lt;a href=&#34;https://github.com/jgresalfi&#34;&gt;Jason Gresalfi&lt;/a&gt; presented on how he had created a Chrome extension. The repo for his extentsion can be found &lt;a href=&#34;https://github.com/jgresalfi/paletteable&#34;&gt;here&lt;/a&gt; and you can find it in the Chrome webstore &lt;a href=&#34;https://chrome.google.com/webstore/detail/paletteable/ncggjbjnlddfacehhidbhnhcnjiengmk&#34;&gt;here&lt;/a&gt;. It&amp;rsquo;s amazing how &amp;ldquo;simple&amp;rdquo; chrome extensions can be. They&amp;rsquo;re just HTML, CSS, and JavaScript. Of course, you can build a back end to persist data in a database but you don&amp;rsquo;t have to. I think I&amp;rsquo;ll start looking for an itch I can scratch in that world so I have another project in the pipeline down the road. I think our group and meetup is starting to take more shape and we can make it something special in the Nashville community. Hopefully we can organize and get some things we&amp;rsquo;re thinking about in motion here soon.&lt;/p&gt;

&lt;p&gt;I &lt;em&gt;almost&lt;/em&gt; finished ORMs and ActiveRecord tonight but I have one more video lecture to watch. There were 4 tonight which totaled over 4 hours so even on 2.0x it took a lot of time. I&amp;rsquo;m deciding to be in bed before midnight rather than finish the review. Maybe I&amp;rsquo;ll just fall asleep to the sound of Avi&amp;rsquo;s voice playing the video cast to my TV&amp;hellip;? Actually, nope, not doing that.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m still struggling with understanding databases and how they relate without seeing a visual. However, ActiveRecord is making it A LOT easier to piece together. It&amp;rsquo;s bringing the database back into Ruby. From my notes tonight:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The model that &lt;code&gt;has_many&lt;/code&gt; is considered the parent. The model that &lt;code&gt;belongs_to&lt;/code&gt; is considered the child. If you tell the child that it belongs to the parent, &lt;em&gt;the parent won&amp;rsquo;t know about that relationship&lt;/em&gt;. If you tell the parent that a certain child object has been added to its collection, &lt;em&gt;both the parent and the child will know about the association&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is just good to know. It&amp;rsquo;s pretty self explanatory I think. A really cool thing that Avi utilized in one of his lectures is &lt;a href=&#34;https://github.com/voormedia/rails-erd&#34;&gt;Rails Erd&lt;/a&gt;. It takes the database tables and graphically shows how they are connected in a Rails app. I couldn&amp;rsquo;t get it to work as I&amp;rsquo;m not using Rails yet and I didn&amp;rsquo;t want to spend too much time messing with it but I&amp;rsquo;m definitely going to use it. If you&amp;rsquo;re interested it&amp;rsquo;s a pretty quick install and usage process:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install graphviz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add &lt;code&gt;gem &amp;quot;rails-erd&amp;quot;&lt;/code&gt; to your Gemfile.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bundle install
rake erd
open erd.pdf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An example pulled directly from the repo:
&lt;img src=&#34;https://camo.githubusercontent.com/f705fefa37f808758adbfa8e53d7ba2d8d9a59d7/68747470733a2f2f766f6f726d656469612e6769746875622e696f2f7261696c732d6572642f696d616765732f656e746974792d72656c6174696f6e736869702d6469616772616d2e706e67&#34; alt=&#34;example entity-relationship diagram&#34; /&gt;&lt;/p&gt;

&lt;p&gt;According to my dashboard I&amp;rsquo;m at 53 lessons for the week so I hit my goal of 49 with a day to spare! I&amp;rsquo;m super happy about this (although, sometimes I don&amp;rsquo;t trust the numbers on my dashboard&amp;hellip;) and don&amp;rsquo;t plan on stopping now. We have an engagement (marriage, wedding, I can&amp;rsquo;t remember) part tomorrow at a winery so hopefully I can still get a decent amount of coding in. Although, my shaggy mop is going to get a trim in the morning before we go so I might lost most of the day/afternoon/evening. I guess a social event a couple times a month helps to keep the sanity.&lt;/p&gt;

&lt;p&gt;Time spent today: 7:08&lt;br /&gt;
Time spent total: 145:03&lt;br /&gt;
Lessons completed today: 9&lt;br /&gt;
Lessons completed total: 339&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 33</title>
      <link>https://itzsaga.github.io/post/day-033/</link>
      <pubDate>Fri, 31 Mar 2017 23:26:51 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-033/</guid>
      <description>&lt;p&gt;I started Active Record tonight and I&amp;rsquo;m stoked. Mostly because a lot of the work has already been done and now I can just use the magic that is provided to me. I think I have always had the basic understanding that there are libraries that will be doing a lot of the things I have been learning for me. That is why when I get stuck on things but can still complete projects and labs I just push through. I definitely save bookmarks to go back to if need be but ultimately I want to see how granularly I really need to know some of these concepts before I spend hours learning them deeper. While I know having the deeper understanding is a good thing I also have a timeline I&amp;rsquo;m working with and can dive deeper into topics once I&amp;rsquo;ve graduated or have landed a job.&lt;/p&gt;

&lt;p&gt;Database migrations are a nice thing to have.&lt;/p&gt;

&lt;p&gt;I got sutck for a while tonight because my environment was throwing an error in relation to the JSON gem. Specifically version &lt;code&gt;1.8.3&lt;/code&gt; which was inthe &lt;code&gt;Gemfile.lock&lt;/code&gt; of afew of the labs I&amp;rsquo;ve worked on tonight. I learned with the help of a Learn Expert (someone who&amp;rsquo;s around to help out studnets) that the &lt;code&gt;Gemfile.lock&lt;/code&gt; is pretty much a set of dependencies that were used when the files were written and are statically set to keep things consistent. So we deleted that file and ran &lt;code&gt;bundle&lt;/code&gt; again and everything worked fine. Luckily I asked why we did what we did so I would know enough to repeat the process tonight. Every time I run into this problem I do raise an issue on GitHub so hopefully it&amp;rsquo;ll be taken care of for those following behind me.&lt;/p&gt;

&lt;p&gt;I feel like I&amp;rsquo;m behind on the target I set for myself and I have the &lt;a href=&#34;https://www.facebook.com/groups/free.code.camp.nashville&#34;&gt;Free Code Camp Nashville&lt;/a&gt; meetup to go to tomorrow. Plus a wedding shower on Sunday. I still plan to be done with Rack this weekend. That&amp;rsquo;s 22 lessons/labs. I also am considering adding an extra full day into next week by having my nanny come and watch my girls on Friday. So instead of 3 hours next Friday night, I can hit it hard all day and have a 10 hour day. We&amp;rsquo;ll see how I feel after Monday&amp;rsquo;s progress.&lt;/p&gt;

&lt;p&gt;Something I did to save some time is now when I generate my static blog files they automatically are put into my proper local file location to be uploaded to the seperate repo. That&amp;rsquo;s a complicated sentence to say, I keep my content in one folder and repo, and my public facing files in another folder and repo. I had been generating the public file then copying and pasting in my file manager. Now the files are generated directly into the proper folder saving me a few steps and speeding up my publishing time.&lt;/p&gt;

&lt;p&gt;Time spent today: 2:43&lt;br /&gt;
Time spent total: 137:55&lt;br /&gt;
Lessons completed today: 5&lt;br /&gt;
Lessons completed total: 330&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>