<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My Flatiron Journey</title>
    <link>https://itzsaga.github.io/index.xml</link>
    <description>Recent content on My Flatiron Journey</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 25 Mar 2017 23:57:30 -0500</lastBuildDate>
    <atom:link href="https://itzsaga.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Day 27</title>
      <link>https://itzsaga.github.io/post/day-027/</link>
      <pubDate>Sat, 25 Mar 2017 23:57:30 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-027/</guid>
      <description>&lt;p&gt;So I went later than I wanted to tonight, but I was on a roll. I would have finished much earlier but I spent 2.5 hours today at a developer meetup. It was interesting as I&amp;rsquo;ve only been to one other so far. It was good to meet some people and start putting real people to the dev community in Nashville. I did find out that basically nobody is learning/using Ruby (at least at this meetup). The largest language according to the people today is .NET because of all the health care companies. I showed a lab to a guy who&amp;rsquo;s 4 months in at &lt;a href=&#34;http://nashvillesoftwareschool.com/&#34;&gt;Nashville Software School&lt;/a&gt; and he was impressed with the TDD and seeing how it worked. He said he never sees tests like that and doesn&amp;rsquo;t know anything about writing them. I assured him I didn&amp;rsquo;t know much a bout writing tests either but I did read them all day long.&lt;/p&gt;

&lt;p&gt;The big announcement is &amp;hellip; &lt;strong&gt;I FINISHED MY CLI GEM PROJECT!&lt;/strong&gt; Now, I haven&amp;rsquo;t done my review with my instructor and &lt;em&gt;passed&lt;/em&gt; yet but it&amp;rsquo;s done. I&amp;rsquo;m currently working through my &lt;a href=&#34;https://travis-ci.org/itzsaga/meetups-around&#34;&gt;Travis CI&lt;/a&gt; tests and getting those to pass. I expect that to be passing soon and then I&amp;rsquo;ll update my gem. It&amp;rsquo;s already live on &lt;a href=&#34;https://rubygems.org/gems/meetups_around&#34;&gt;RubyGems.org&lt;/a&gt;! I&amp;rsquo;ll have a new version pushed up when I get my Travis passing.&lt;/p&gt;

&lt;p&gt;So I had a few hang ups along the way but most of it had to do with scraping. I figured it out though by trial and error. From what I understand scraping is mostly trial and error so there isn&amp;rsquo;t much to pass along knowledge wise. I did run into the problem of trying to turn this: &lt;code&gt;&amp;quot;7\n&amp;quot; + &amp;quot;\n&amp;quot; + &amp;quot;\n&amp;quot; + &amp;quot;Paddlers\n&amp;quot; + &amp;quot;\n&amp;quot; + &amp;quot;going&amp;quot;&lt;/code&gt; into this: &lt;code&gt;&amp;quot;7 Paddlers going&amp;quot;&lt;/code&gt;. When I did &lt;code&gt;gsub(&amp;quot;\n&amp;quot;, &amp;quot;&amp;quot;)&lt;/code&gt; it returned &lt;code&gt;7Paddlersgoing&lt;/code&gt; and &lt;code&gt;gsub(&amp;quot;\n&amp;quot;, &amp;quot; &amp;quot;)&lt;/code&gt; returned &lt;code&gt;&amp;quot;7   Paddlers  going&amp;quot;&lt;/code&gt; with too many spaces. I was thinking I was going to have to split the string into an array, filter out the &lt;code&gt;\n&lt;/code&gt; and then join the array. Then I thought, &amp;ldquo;Why not Google turning multiple spaces into a single space.&amp;rdquo; That seems like a problem someone would have solved already. Guess what? They have. So I ended up with &lt;code&gt;row.css(&amp;quot;div.attendee-count&amp;quot;).text.strip.gsub(&amp;quot;\n&amp;quot;, &amp;quot; &amp;quot;).gsub(/\s+/, &#39; &#39;)&lt;/code&gt;. Called &lt;code&gt;gsub&lt;/code&gt; on a string that had already been changed.&lt;/p&gt;

&lt;p&gt;I just realized that Travis is never going to pass because I don&amp;rsquo;t have any tests in my gem. Whoops! So I&amp;rsquo;ll remove that integration for now. It&amp;rsquo;ll be a nice future project to write tests for the gem.&lt;/p&gt;

&lt;p&gt;To explain my project in brief, you run the program from the command line, it asks you to input a zip code to see meetups from, if you enter less or more than 5 digits or not 5 digits, say 5 letter, it tell you to input 5 numbers. Then it asks for a radius to search in, I limited the radius to &amp;lt;100 miles. Then it returns a list of all the meetups scheduled for today. If there are none it tells you such. It then asks you if you&amp;rsquo;d like to search again. I&amp;rsquo;m proud as well as ready to move on to SQL.&lt;/p&gt;

&lt;p&gt;Time spent today: 7:24&lt;br /&gt;
Time spent total: 118:21&lt;br /&gt;
Lessons completed today: 1&lt;br /&gt;
Lessons completed total: 286&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 26</title>
      <link>https://itzsaga.github.io/post/day-026/</link>
      <pubDate>Fri, 24 Mar 2017 22:46:48 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-026/</guid>
      <description>&lt;p&gt;Tonight I made some good progress on my CLI project. I finished watching Avi&amp;rsquo;s video on the project and it helped &lt;strong&gt;A LOT&lt;/strong&gt;.  It was long so I decided to just complete the basic stub of my project and leave it at that for tonight. I really like working with fake placeholder data for as long as possible. This way it&amp;rsquo;ll all &lt;em&gt;hopefully&lt;/em&gt; just work when real data is passed in. So taking the stub I&amp;rsquo;m sharing below and abstracting that out to have objects holding the data for each meetup. Then building the methods to create those objects in another class.&lt;/p&gt;

&lt;p&gt;What I have so far:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;class MeetupsAround::CLI
  attr_reader :todays_date

  def call
    @todays_date = &amp;quot;Saturday, March 25&amp;quot;
    input_zipcode
    input_radius
    list_meetups
    again?
  end

  def input_zipcode
    puts &amp;quot;What zip code would you like to see meetups for?&amp;quot;
    zip_code = gets.strip
    if /\b\d{5}\b/.match?(zip_code)
      nil
    else
      puts &amp;quot;Please enter a five digit zip code.&amp;quot;
      self.input_zipcode
    end
  end

  def input_radius
    puts &amp;quot;What radius around that zip code would you like to see meetups for?&amp;quot;
    radius = gets.strip
    if /\b\d{1,2}\b/.match?(radius)
      nil
    else
      puts &amp;quot;Please enter a radius less than 100.&amp;quot;
      self.input_radius
    end
  end

  def list_meetups
    puts &amp;quot;Today #{todays_date} are the following meetups:&amp;quot;
    puts &amp;lt;&amp;lt;~HEREDOC
    1. 2:30PM - Developer Launchpad Nashville - Coding Jam - 19 Developers going
    2. 9:00AM - Score Nashville Events, Networking and Workshops - Join us for a &amp;quot;Start your Business&amp;quot; workshop! - 2 Members going
    3. 10:00AM - Paid to Speak Entrepreneurs - How To Get Your Speaking Career Started - 18 Members Going
    HEREDOC
  end

  def again?
    puts &amp;quot;Would you like to search again? [Y/N]&amp;quot;
    input = gets.strip.downcase
    puts input == &amp;quot;y&amp;quot; || input == &amp;quot;yes&amp;quot; ? call : &amp;quot;Goodbye =)&amp;quot;
  end

end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next up I&amp;rsquo;ll change the &lt;code&gt;HEREDOC&lt;/code&gt; block and utilize an object iteration to list each object. Something like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;meetups.each.with_index(1) do |meetup, i|
  puts &amp;quot;#{i}. #{meetup.time} - #{meetup.group} - #{meetup.event} - #{meetup.attendees}&amp;quot;
end  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now I don&amp;rsquo;t know if this is exactly what I&amp;rsquo;ll end up with but it&amp;rsquo;s what I&amp;rsquo;m thinking at this point in time. I&amp;rsquo;ll also need to have an array with the meetup objects called &lt;code&gt;meetups&lt;/code&gt; in this scenario. For this project I&amp;rsquo;m suppose to record myself coding for 30 minutes so I think when I go to tackle this I&amp;rsquo;ll do that recording. I&amp;rsquo;ll watch the video Avi made another time and get a solid plan of action down and then go for it. Pretty sure they don&amp;rsquo;t want a video of me watching videos hehe.&lt;/p&gt;

&lt;p&gt;Tonight I also installed a couple more packages into Atom. Specifically &lt;a href=&#34;https://atom.io/packages/minimap&#34;&gt;minimap&lt;/a&gt;, &lt;a href=&#34;https://atom.io/packages/seti-icons&#34;&gt;seti-icons&lt;/a&gt;, &lt;a href=&#34;https://atom.io/packages/atom-beautify&#34;&gt;atom-beautify&lt;/a&gt;, &lt;a href=&#34;https://atom.io/packages/highlight-selected&#34;&gt;highlight-selected&lt;/a&gt;, &lt;a href=&#34;https://atom.io/packages/pigments&#34;&gt;pigments&lt;/a&gt;, &lt;a href=&#34;https://atom.io/packages/minimap-highlight-selected&#34;&gt;minimap-highlight-selected&lt;/a&gt;, and &lt;a href=&#34;https://atom.io/packages/minimap-pigments&#34;&gt;minimap-pigments&lt;/a&gt;. I highly recommend them all so check them out.&lt;/p&gt;

&lt;p&gt;Time spent today: 2:22&lt;br /&gt;
Time spent total: 110:57&lt;br /&gt;
Lessons completed today: 0&lt;br /&gt;
Lessons completed total: 285&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 25</title>
      <link>https://itzsaga.github.io/post/day-025/</link>
      <pubDate>Thu, 23 Mar 2017 23:11:22 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-025/</guid>
      <description>&lt;p&gt;So tonight I started my CLI Gem project. This one is going to be in my portfolio and has &lt;strong&gt;A LOT&lt;/strong&gt; more to it. Okay, well maybe not a lot more but it&amp;rsquo;s the first time I&amp;rsquo;m starting from scratch to build something. Luckily, I&amp;rsquo;m not left out to dry and there is a how-to that&amp;rsquo;s over an hour long that Avi did. Of course it&amp;rsquo;s not exactly what I&amp;rsquo;ll need to do and I&amp;rsquo;ll run into problems along the way but it&amp;rsquo;s nice to have a good resource to start with. I&amp;rsquo;m sure I could find a nice video around but having one provided definitely saves some time.&lt;/p&gt;

&lt;p&gt;I decided to build a CLI Gem that will return the meetups in a specified radius from a specific zip code for the current day from &lt;a href=&#34;https://www.meetup.com/&#34;&gt;Meetup.com&lt;/a&gt;. The first big time saver was &lt;code&gt;bundle gem new_gem_name&lt;/code&gt; which basically scaffolded a new gem with the name provided and even initialized it as a git repo. Avi provided a great set of steps to build a Gem:
1. Plan your gem, imagine your interface.
2. Start with the project structure - google.
3. Start with the entry point - the file run.
4. Force that to build the CLI interface.
5. Stub out the interface.
6. Start making things real.
7. Discover objects.
8. Program.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve completed 1-4 in a very basic way now. Next is to stub out my interface with fake data. That will allow me to ensure my flow is working correctly and then basically code to the exact info I need. This work flow is also allowing me to make progress quickly and see the iterations that I&amp;rsquo;m going through to get to the end result. Not much else to share as I didn&amp;rsquo;t do anything too &amp;ldquo;deep&amp;rdquo; today. Just getting started on this project. If you&amp;rsquo;re interested in building your own gem using bundler check out &lt;a href=&#34;http://railscasts.com/episodes/245-new-gem-with-bundler&#34;&gt;RailsCasts #245 New Gem With Bundler&lt;/a&gt;. If you want the walk through that Avi does you&amp;rsquo;ll have to join Flatiron. I&amp;rsquo;m hopefully going to be able to finish this project on Saturday. However, I have a meetup to attend and I have my son this weekend. This will be the first weekend I have my son since I&amp;rsquo;ve started the program. I only have my son one weekend a month so I&amp;rsquo;ll have to see how much time I truly can sacrifice when the kids are awake.&lt;/p&gt;

&lt;p&gt;You can follow along with my progress on project on GitHub &lt;a href=&#34;https://github.com/itzsaga/meetups-around&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Time spent today: 2:29&lt;br /&gt;
Time spent total: 108:35&lt;br /&gt;
Lessons completed today: 0&lt;br /&gt;
Lessons completed total: 285&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 24</title>
      <link>https://itzsaga.github.io/post/day-024/</link>
      <pubDate>Wed, 22 Mar 2017 23:01:17 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-024/</guid>
      <description>&lt;p&gt;&lt;em&gt;yawn&lt;/em&gt; it&amp;rsquo;s been a long day. My 3 month old was up early today. Either way, I got my scraping project done tonight. Nokogiri can be quite particular about the things you use to select content. Turned out I was pretty much there and just needed to change how I was accessing the info I needed.&lt;/p&gt;

&lt;p&gt;Attended a Study Group tonight which taught me something very important. When using &lt;code&gt;pry&lt;/code&gt; inside a loop when you enter &lt;code&gt;exit&lt;/code&gt; into the pry prompt it runs the next loop. This way you can see what is being passed in each time. I was struggling trying to see what was being passed in each time in my scraping project. So now I know and that key piece of info is what helped me finish my scraping project which can be found in full &lt;a href=&#34;https://github.com/itzsaga/oo-student-scraper-v-000&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m calling it a night. I start my first portfolio project tomorrow building a CLI Ruby Gem.&lt;/p&gt;

&lt;p&gt;Time spent today: 2:35&lt;br /&gt;
Time spent total: 106:07&lt;br /&gt;
Lessons completed today: 1&lt;br /&gt;
Lessons completed total: 285&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 23</title>
      <link>https://itzsaga.github.io/post/day-023/</link>
      <pubDate>Tue, 21 Mar 2017 23:15:17 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-023/</guid>
      <description>&lt;p&gt;So working on my scraping project. It&amp;rsquo;s hurting my head. Scraping is no fun to figure out. What I&amp;rsquo;m stuck on right now is iterating. When I have some time tomorrow I&amp;rsquo;m going to work on completely understanding iterating when scraping. Here&amp;rsquo;s what I&amp;rsquo;m looking at currently:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;social-icon-container&amp;quot;&amp;gt;
  &amp;lt;a href=&amp;quot;https://twitter.com/empireofryan&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;social-icon&amp;quot; src=&amp;quot;../assets/img/twitter-icon.png&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
  &amp;lt;a href=&amp;quot;https://www.linkedin.com/in/ryan-johnson-321629ab&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;social-icon&amp;quot; src=&amp;quot;../assets/img/linkedin-icon.png&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
  &amp;lt;a href=&amp;quot;https://github.com/empireofryan&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;social-icon&amp;quot; src=&amp;quot;../assets/img/github-icon.png&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
  &amp;lt;a href=&amp;quot;https://www.youtube.com/watch?v=C22ufOqDyaE&amp;quot;&amp;gt;&amp;lt;img class=&amp;quot;social-icon&amp;quot; src=&amp;quot;../assets/img/rss-icon.png&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then I&amp;rsquo;m doing (among other things above it):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;social = doc.css(&amp;quot;.social-icon-container a&amp;quot;)
social.each do |link|
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I&amp;rsquo;m struggling to understand what |link| is inside the loop. I&amp;rsquo;m thinking it&amp;rsquo;s each instance of &lt;code&gt;a&lt;/code&gt; because there are 4 of those and I&amp;rsquo;m setting &lt;code&gt;social&lt;/code&gt; equal to the &lt;code&gt;a&lt;/code&gt;. However, I&amp;rsquo;m not sure. I know when I call &lt;code&gt;doc.css(&amp;quot;.social-icon-container a&amp;quot;)&lt;/code&gt; in pry I end up with Nokogiri&amp;rsquo;s version of everything inside the div. I&amp;rsquo;m sure I&amp;rsquo;ll crush it tomorrow. I know my logic of looping over each &lt;code&gt;a&lt;/code&gt; and using an &lt;code&gt;if&lt;/code&gt; or even &lt;code&gt;case&lt;/code&gt; to check if the &lt;code&gt;img src=&lt;/code&gt; is &lt;code&gt;==&lt;/code&gt; to one of the social networks, then setting the &lt;code&gt;href&lt;/code&gt; value to equal a variable I&amp;rsquo;ll use later is the way to go and solid.&lt;/p&gt;

&lt;p&gt;Time spent today: 2:08&lt;br /&gt;
Time spent total: 103:32&lt;br /&gt;
Lessons completed today: 0&lt;br /&gt;
Lessons completed total: 284&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 22</title>
      <link>https://itzsaga.github.io/post/day-022/</link>
      <pubDate>Mon, 20 Mar 2017 22:51:58 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-022/</guid>
      <description>&lt;p&gt;About 10 minutes before I was suppose to get to my computer the power went out in my subdivision. I quickly realized that while I had setup flashlights in strategic locations in our apartment, when we moved into our house I never did the same. My wife and I both did not have our phones on us and it was &lt;strong&gt;DARK&lt;/strong&gt;. Needless to say I closed the baby gate at the top of the stairs to keep the little ones safe and made my way to the kitchen where I knew a flashlight was. While I was downstairs the power came back on and my daughter yelled out, &amp;ldquo;Thanks Daddy!&amp;rdquo; I&amp;rsquo;ll take credit, yes I will. This put me behind. I then found out that I hadn&amp;rsquo;t installed &lt;a href=&#34;https://zoom.us/&#34;&gt;Zoom&lt;/a&gt; and couldn&amp;rsquo;t get into the Study Group I was planning on attending. I had already decided to &amp;ldquo;take the night off&amp;rdquo; and just do the study group and work on my Tic-Tac-Toe AI some. Needless to say 30 minutes later I confirmed Zoom was working.&lt;/p&gt;

&lt;p&gt;Tonight I realized it&amp;rsquo;s amazing what coming at a project fresh can do. I figured out why my random move in Tic-Tac-Toe wasn&amp;rsquo;t working in less than 3 minutes tonight. I had an &lt;code&gt;=&lt;/code&gt; instead of an &lt;code&gt;==&lt;/code&gt;. However, after that I couldn&amp;rsquo;t get into the groove. I wrote out a couple more methods to decide on the first and second move for the computer but then just left it as random moves after that. I did some TTT strategy ready and came up with the best first move is a corner and the best second move is the center. If the center is taken the best second move is a corner. So I built that logic into the game. From move 3 on the computer plays random. The computer never beat me, it did however, tie a few times with this little bit of knowledge. I have an idea though and want to see if I can pair with someone to implement it. Here&amp;rsquo;s my &lt;em&gt;final&lt;/em&gt; code:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;module Players
  class Computer &amp;lt; Player
    def move(board)
      if board.cells.count{|square| square != &amp;quot; &amp;quot; } == 0
        &amp;quot;1&amp;quot;
      elsif board.cells.count{|square| square != &amp;quot; &amp;quot; } == 1
        board.cells.find_index(&amp;quot;X&amp;quot;) == 4 ? &amp;quot;1&amp;quot; : &amp;quot;5&amp;quot;
      else
        possible_moves = [&amp;quot;1&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;3&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;5&amp;quot;, &amp;quot;6&amp;quot;, &amp;quot;7&amp;quot;, &amp;quot;8&amp;quot;, &amp;quot;9&amp;quot;]
        valid_moves = []
        possible_moves.each do |move|
          valid_moves &amp;lt;&amp;lt; move if board.cells[move.to_i-1] == &amp;quot; &amp;quot;
        end
        valid_moves.sample
      end
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I started on the next project which is a scraping project. I don&amp;rsquo;t have much practice with Nokogiri but on my first attempt I was pulling the data I needed. I can see this project might go quicker than the last two. I&amp;rsquo;m going to hit it hard tomorrow night and get it done.&lt;/p&gt;

&lt;p&gt;Time spent today: 1:33&lt;br /&gt;
Time spent total: 101:24&lt;br /&gt;
Lessons completed today: 1&lt;br /&gt;
Lessons completed total: 284&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 21</title>
      <link>https://itzsaga.github.io/post/day-021/</link>
      <pubDate>Sun, 19 Mar 2017 22:32:36 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-021/</guid>
      <description>&lt;p&gt;Another productive project day means, not much to talk about! I got through all the tests that I needed to for my Tic-Tac-Toe with AI project. I started trying to build out my &amp;ldquo;AI&amp;rdquo; but didn&amp;rsquo;t get very far. I know I need to start simple so I decided to just attempt the computer making random moves. I tried to implement the following work flow:
1. Get the current board array (although this should be passed in by default).
2. Set an array equal to all the possible moves as strings, 1-9.
3. Set a new empty array to collect open squares.
4. Loop over the current board array and if a square is empty &lt;code&gt;= &amp;quot; &amp;quot;&lt;/code&gt; shovel to the array collecting open squares. I will do this by utilizing the possible moves array as the index numbers. I&amp;rsquo;ll just turn each array value into an integer and subtract one.
5. If the board square is empty shovel the possible move string to the empty array collecting open squares.
6. Return a random string from the possible moves array.&lt;/p&gt;

&lt;p&gt;This &lt;em&gt;should&lt;/em&gt; get my computer playing only random open squares. However, my code created an infinite loop and I decided I could call it a day after that. I&amp;rsquo;m hoping I can pair with someone just for the AI part and get it done. If you&amp;rsquo;re interested in the project you can find it on my GitHub &lt;a href=&#34;https://github.com/itzsaga/ttt-with-ai-project-v-000&#34;&gt;here&lt;/a&gt;. My current computer logic (although it might be hard to understand without looking at all the files) is this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;module Players
  class Computer &amp;lt; Player
    def move(board)
      possible_moves = [&amp;quot;1&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;3&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;5&amp;quot;, &amp;quot;6&amp;quot;, &amp;quot;7&amp;quot;, &amp;quot;8&amp;quot;, &amp;quot;9&amp;quot;]
      valid_moves = []
      possible_moves.each do |move|
        valid_moves &amp;lt;&amp;lt; move if board.cells[move.to_i-1] = &amp;quot; &amp;quot;
      end
      valid_moves.sample
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I&amp;rsquo;m sure I&amp;rsquo;ll get at least this little bit of logic working tomorrow even if on my own. Other than that the game works for 2 humans to play!&lt;/p&gt;

&lt;p&gt;So day by day I&amp;rsquo;m enjoying my new OS even more. Today I setup workspaces which just made all of life easier.&lt;/p&gt;

&lt;p&gt;My workspaces overview:&lt;br /&gt;
&lt;img src=&#34;../../images/workspace.png&#34; alt=&#34;Ubuntu Desktop Workspaces&#34; title=&#34;Ubuntu Desktop workspaces overview&#34; /&gt;&lt;br /&gt;
I have one with Atom and the Terminal (I&amp;rsquo;ve since changed to &amp;ldquo;Solarized Light&amp;rdquo; themes on both because I was getting glare during the day):&lt;br /&gt;
&lt;img src=&#34;../../images/workspace-code.png&#34; alt=&#34;Coding Workspace&#34; title=&#34;My coding workspace&#34; /&gt;&lt;br /&gt;
One with Slack:&lt;br /&gt;
&lt;img src=&#34;../../images/workspace-slack.png&#34; alt=&#34;Slack Workspace&#34; title=&#34;My Slack workspace&#34; /&gt;&lt;br /&gt;
Finally, one with Chrome:&lt;br /&gt;
&lt;img src=&#34;../../images/workspace-web.png&#34; alt=&#34;Web Workspace&#34; title=&#34;My web workspace&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I also got &lt;a href=&#34;https://justgetflux.com/&#34;&gt;f.lux&lt;/a&gt; installed today which is one the things on my &lt;strong&gt;must have&lt;/strong&gt; list when it comes to apps on my computers. I even have installed it at shared work computers in the past and freaked some coworkers out the first time they use the computer afterwards. I&amp;rsquo;ll write a post about my biohacks here sometime soon. Maybe when I&amp;rsquo;m done with this set of projects and before I move to the next section. I have more than a few things that I do to keep my mind running in top form. From nootropics to meditation.&lt;/p&gt;

&lt;p&gt;Time spent today: 7:02&lt;br /&gt;
Time spent total: 99:50&lt;br /&gt;
Lessons completed today: 0&lt;br /&gt;
Lessons completed total: 283&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One Way To Pair Program</title>
      <link>https://itzsaga.github.io/post/one-way-to-pair-program/</link>
      <pubDate>Sat, 18 Mar 2017 23:07:23 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/one-way-to-pair-program/</guid>
      <description>&lt;p&gt;Tonight a couple people were wanting to know the best way to pair program together. They had both done the beginning parts of the Tic-Tac-Toe with AI project (the one I&amp;rsquo;m getting ready to start) and wanted to work on the AI part together. The exact question was:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hey @&lt;strong&gt;***&lt;/strong&gt; and I are doing parallel pairing :slightly_smiling_face: what is the best way to go about this, to work on the same repo on separate branches or just copy on paste. She is on IDE, I&amp;rsquo;m on local. Any help muchly appreciated!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The always awesome and helpful instructor &lt;a href=&#34;https://github.com/cernanb&#34;&gt;Cernan Bernardo&lt;/a&gt; quickly gave a how-to that I knew others could use. I&amp;rsquo;m just going to abbreviate what he said and turn it into a numbered list.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Grab each other&amp;rsquo;s SSH URL for your respective GitHub repos.&lt;/li&gt;
&lt;li&gt;In your respective terminals (local or IDE) you would each run the command &lt;code&gt;git remote add upstream *copy_ssh_url_here*&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;After running those commands when you run &lt;code&gt;git remote -v&lt;/code&gt; you will see two remotes&amp;hellip;one for your origin which is your respective GitHub repo and one for upstream which is your partner&amp;rsquo;s repo.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now the setup is done, here is the work flow to be done &lt;em&gt;before&lt;/em&gt; either starts working on the app:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Run &lt;code&gt;git pull upstream master&lt;/code&gt;&amp;hellip;this will pull down any code your partner has added to the app and pushed up to their GitHub.&lt;/li&gt;
&lt;li&gt;Work on your part of the app.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;git push&lt;/code&gt; or &lt;code&gt;git push origin master&lt;/code&gt;&amp;hellip;this will push your new code to YOUR repo.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;With that work flow you will each have your code in sync. Just remember to &lt;em&gt;pull before you push&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So there you have it. Questions feel free to ask and I&amp;rsquo;ll ask Cernan ;-)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 20</title>
      <link>https://itzsaga.github.io/post/day-020/</link>
      <pubDate>Sat, 18 Mar 2017 22:57:20 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-020/</guid>
      <description>&lt;p&gt;Sorry I didn&amp;rsquo;t get a blog in yesterday. I was struggling with setting up a dual boot of Ubuntu on my Windows 10 laptop. I ran into the problem of not having a large enough partition created and hit a snag. That said everything was installing fine once I got going. I had hoped to just run a persistent USB key and be able to take my dev environment wherever I want but I couldn&amp;rsquo;t figure that out. Needless to say I didn&amp;rsquo;t feel like writing. In addition, all I did was watch a few lectures last night so there was little to report on. I decided to setup the dual boot because after my intake conversation with &lt;a href=&#34;https://github.com/tracypholmes&#34;&gt;Tracy&lt;/a&gt; I was convinced that I should take the time and get my environment setup. It took some time as I had less than 10GB free but by being creative, and using &lt;a href=&#34;https://windirstat.net/&#34;&gt;WinDirStat&lt;/a&gt; combined with &lt;a href=&#34;http://www.revouninstaller.com/index.html&#34;&gt;Revo Uninstaller&lt;/a&gt;, I changed that to ~25GB. I decided to make a 15GB partition for Ubuntu 16.04.2 LTS but ended up running out of space. I freed up another 5GB today and add ed that to my Linux partition. Overall it was probably about an 8 hour process. I have yet to code in it but I&amp;rsquo;m writing this post in Atom on Ubuntu and I&amp;rsquo;ve cloned down my static site from GitHub using the terminal and I plan to push it as well. One of the biggest changes is that everything just works, in the &lt;code&gt;sudo apt-get install&lt;/code&gt; kind of way. It&amp;rsquo;s nice. Also, Windows doesn&amp;rsquo;t want to go past a 1920x1080 resolution and Ubuntu will go 3200x1800 no problem. My eyes are still adjusting but I know I&amp;rsquo;ll be fine. Ubuntu was being a b*tch last night trying to install packages and stuff (programs hanging, etc&amp;hellip;) but today it has worked great. I&amp;rsquo;m not sure if having some disk space has helped the OS out but my frustrations have disappeared today.&lt;/p&gt;

&lt;p&gt;Today I started my Music Library CLI Project for Object Oriented Ruby! This thing was a beast with 71 tests that I needed to get passing. Luckily I could piece meal it together all based on code I already had written. There was a good amount that had to be written from scratch or completely changed to make the tests pass. However, I had a very strong base of knowledge to work with. I rarely had to Google or hit up Ruby Docs for answers today/tonight. I only hit one MAJOR snag. I couldn&amp;rsquo;t get a test to pass but everything looked right. I ran the CLI in my terminal and the output was perfect. After 90 minutes of trying different things I finally reached out to what is called a Learn Expert for help. 30 minutes later she was remoted in on my computer and ended up commenting out the test because her and a colleague had both agreed my code worked for the requirements even if it didn&amp;rsquo;t pass the tests. After that I was done in &amp;lt;25 minutes. It took me 7:57 to finish the project from start to finish and I probably could&amp;rsquo;ve shaved over an hour off of that. I haven&amp;rsquo;t refactored at all but the project is &lt;a href=&#34;https://github.com/itzsaga/ruby-music-library-cli-v-000&#34;&gt;here&lt;/a&gt; if you&amp;rsquo;d like to see it.&lt;/p&gt;

&lt;p&gt;Today was the kind of coding day I&amp;rsquo;d like to have every Saturday and Sunday. Maybe 1 more productive hour in there though. Tomorrow I&amp;rsquo;ll start a CLI Tic-Tac-Toe with AI project. I&amp;rsquo;m interested to see how AI is going to be tested and required. Mostly because I read &lt;a href=&#34;https://medium.freecodecamp.com/how-to-make-your-tic-tac-toe-game-unbeatable-by-using-the-minimax-algorithm-9d690bad4b37&#34;&gt;this&lt;/a&gt; post on Medium about building an unbeatable Tic-Tac-Toe game not too long ago. I thought it would be fun to implement so I&amp;rsquo;ll see if it&amp;rsquo;s possible, maybe on the refactor.&lt;/p&gt;

&lt;p&gt;Not much new to post about. Just been doing a lot of lecture watching and coding projects currently. Oh, I did learn about the &lt;code&gt;unless&lt;/code&gt; method today from a Learn Expert when a piece of my code wouldn&amp;rsquo;t pass. I&amp;rsquo;m realizing sometimes nobody can explain why we need to use &lt;code&gt;unless&lt;/code&gt; or &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;while&lt;/code&gt; to make something work but that&amp;rsquo;s part of it. Some things are just at such a high level of knowing the language that the majority of people won&amp;rsquo;t know why.&lt;/p&gt;

&lt;p&gt;Time spent today: 9:52&lt;br /&gt;
Time spent total: 92:48&lt;br /&gt;
Lessons completed today: 2 (and 2 yesterday)&lt;br /&gt;
Lessons completed total: 283&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 18</title>
      <link>https://itzsaga.github.io/post/day-018/</link>
      <pubDate>Thu, 16 Mar 2017 23:21:28 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-018/</guid>
      <description>&lt;p&gt;Today saw &lt;strong&gt;a lot&lt;/strong&gt; of new stuff. I feel like a ton of stuff was introduced and not gone over very deeply but deep enough for me to understand and implement it. In 11 lessons and labs I was exposed to &lt;code&gt;super&lt;/code&gt; and how to use it, mass assignments, creating and implementing custom errors, gems, &lt;a href=&#34;https://bundler.io/&#34;&gt;bundler&lt;/a&gt;, and basic scraping with &lt;a href=&#34;http://www.nokogiri.org/&#34;&gt;Nokogiri&lt;/a&gt;. I can tell I was exposed to many things in preparation for the first projects, which can&amp;rsquo;t get here fast enough! At least I say that now, we&amp;rsquo;ll see how I feel when I&amp;rsquo;m at a complete stand still and stuck on one of them lol.&lt;/p&gt;

&lt;p&gt;Today I got stuck for a little while utilizing &lt;code&gt;super&lt;/code&gt;. I had a lab with a parent class with a method that simply &lt;code&gt;puts &amp;quot;I can&#39;t remember what it was exactly.&amp;quot;&lt;/code&gt; and in the child class I was suppose to use &lt;code&gt;super&lt;/code&gt; to have that phrase repeated 10 times. So my initial attempt, inside the method was: &lt;code&gt;super.10.times&lt;/code&gt; as I figured I could just call this method but I got &lt;code&gt;NoMethodError: undefined method `super&#39; for #&amp;lt;Enumerator: 10:times&amp;gt;&lt;/code&gt;. Hmmm. I did some searching and even called &lt;code&gt;super.class&lt;/code&gt; in pry but couldn&amp;rsquo;t get anymore info. BTW, &lt;code&gt;super.class&lt;/code&gt; literally gave me nothing but a new line in pry to look at, or was that actually something??? So I posed the quesiton in the Slack channel for those who are enrolled in the bootcamp. After a side chain of responses with back and forth I got what I needed for my understanding&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;super yields the implementation from the method it’s overriding and returns the last return value or it just returns the last return value.&lt;br /&gt;
- &lt;a href=&#34;https://github.com/genericlady&#34;&gt;Yianna&lt;/a&gt; (thanks!)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is what I needed. Since it&amp;rsquo;s returning the last value and &lt;code&gt;super&lt;/code&gt; was just a simple &lt;code&gt;puts&lt;/code&gt; method the return value was &lt;code&gt;nil&lt;/code&gt;. No wonder I couldn&amp;rsquo;t make method calls on it. I also got some way more in depth info that I haven&amp;rsquo;t had a chance to digest yet. I didn&amp;rsquo;t want to get stuck on it when I knew just typing out &lt;code&gt;super&lt;/code&gt; ten times would pass the lab. In fact, that&amp;rsquo;s how Flatiron&amp;rsquo;s solution was coded. This lab was more about understanding how &lt;code&gt;super&lt;/code&gt; works than how to call methods on it.&lt;/p&gt;

&lt;p&gt;Other than that it was just A LOT of information as I stated at the beginning. Also a chuckle when I found out that &lt;code&gt;~&amp;gt;&lt;/code&gt; is affectionately called a &amp;ldquo;twiddle-wakka&amp;rdquo; for whatever reason. I can figure out the twiddle part but the wakka is stumping me right now. If you know please comment and inform me.&lt;/p&gt;

&lt;p&gt;I have a few video reviews and then I start projects!!!&lt;/p&gt;

&lt;p&gt;Time spent today: 3:16&lt;br /&gt;
Time spent total: 79:20&lt;br /&gt;
Lessons completed today: 11&lt;br /&gt;
Lessons completed total: 279&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 17</title>
      <link>https://itzsaga.github.io/post/day-017/</link>
      <pubDate>Wed, 15 Mar 2017 23:16:44 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-017/</guid>
      <description>&lt;p&gt;Tonight was good. I like having a dedicated 3 hour block at night instead of 1 hour in the morning and 2 hours at night. I feel like I can get into a better flow and get more done. I did a study group tonight on a banking lab that I had worked on recently. Took away from it to utilize &lt;code&gt;self&lt;/code&gt; on pretty much all instance variable references after they have been initialized (created). This is because when we reference the instance variables directly we&amp;rsquo;re cutting out using the macros that &lt;code&gt;attr_accessor&lt;/code&gt; &lt;code&gt;attr_reader&lt;/code&gt; &lt;code&gt;attr_writer&lt;/code&gt; provide. It is true though that writing code that uses &lt;code&gt;@variable&lt;/code&gt; instead of &lt;code&gt;self.variable&lt;/code&gt; will still pass the tests I&amp;rsquo;m working with. I know this because I&amp;rsquo;ve been doing it haha.&lt;/p&gt;

&lt;p&gt;I got through some module lessons and labs once the study group was over. Something to always remember is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you have a module whose methods you would like to be used in another class as &lt;strong&gt;instance methods&lt;/strong&gt;, then you must &lt;strong&gt;include&lt;/strong&gt; the module.&lt;br /&gt;
If you want a module&amp;rsquo;s methods to be used in another class as &lt;strong&gt;class methods&lt;/strong&gt;, you must &lt;strong&gt;extend&lt;/strong&gt; the module.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Modules are sweet and I&amp;rsquo;m happy I&amp;rsquo;m going to start using them. Things are getting simpler while they&amp;rsquo;re getting more complex at the same time. There are so many things that have already been figured out in the world of development and slowly they&amp;rsquo;re being introduced.&lt;/p&gt;

&lt;p&gt;I also learned tonight that there is a term for the work flow that most people follow when they write code. The work flow being, you have tests that are failing, you write whatever code is needed to pass your tests, you break that ugly code and write cleaner code to pass your tests again.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is called the &lt;strong&gt;red, green, refactor&lt;/strong&gt; pattern. First tests fail, then you write bad code to get them to pass, then you refactor that bad code into good code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I guess it makes sense that these things have been defined. I&amp;rsquo;m not inventing web development. Just learning it.&lt;/p&gt;

&lt;p&gt;Time spent today: 2:37&lt;br /&gt;
Time spent total: 76:04&lt;br /&gt;
Lessons completed today: 4&lt;br /&gt;
Lessons completed total: 268&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 16</title>
      <link>https://itzsaga.github.io/post/day-016/</link>
      <pubDate>Tue, 14 Mar 2017 23:13:10 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-016/</guid>
      <description>&lt;p&gt;I completely missed my 6am wake up this morning. I realized I didn&amp;rsquo;t reset my alarm from Sunday night. Since I was up until 1am Sunday night I changed my alarm so I could get more sleep. However, thinking about it now having finished tonight at 11pm instead of 10pm I think I&amp;rsquo;ll keep it this way. No matter what I know after 8pm I can be productive. My wife is home and the kids are suppose to be in bed. Whereas in the morning if the baby isn&amp;rsquo;t happy or one of the toddlers decides that 7am is a good time to wake up I&amp;rsquo;m stuck and just lose that coding time. I also think this will be more effective as the labs and projects get more in depth. A longer time will allow me to get in and tackle a problem that only an hour might not.&lt;/p&gt;

&lt;p&gt;Not much to report today except I&amp;rsquo;m done with Object Relationship and will be startin Object Architecture tomorrow. I have noticed that things are getting repeated to let them sink and and produce some muscle memory. Even if that muscle is the brain. So there will be a video lecture that will be something being built and being explained as it&amp;rsquo;s built (or be a Q&amp;amp;A while it was happening), then a lesson showing step by step how the same thing is built, then a lab where you do what was just taught verbatim, and do it one more time non-verbatim but the exact same thing.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m 17 lessons/labs away from my first projects! That gets me so invigorated to just crush these next few labs and to start building. I can&amp;rsquo;t wait to have some stuff to show off and add to my portfolio.&lt;/p&gt;

&lt;p&gt;Time spent today: 2:26&lt;br /&gt;
Time spent total: 73:26&lt;br /&gt;
Lessons completed today: 4&lt;br /&gt;
Lessons completed total: 264&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Day 15</title>
      <link>https://itzsaga.github.io/post/day-015/</link>
      <pubDate>Mon, 13 Mar 2017 22:22:36 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-015/</guid>
      <description>&lt;p&gt;Day 15 and I&amp;rsquo;m still here. If you didn&amp;rsquo;t see it I wrote a &lt;a href=&#34;../post/why-software-development&#34;&gt;rather long blog post&lt;/a&gt; today as one of my requirements for Flatiron. Since that took up over an hour and I had a 1:10.00+ video as a lesson I didn&amp;rsquo;t get much done. However, I &lt;strong&gt;DO&lt;/strong&gt; have notes from the past couple of days that I never took the time to share.&lt;/p&gt;

&lt;p&gt;So on Saturday morning I did a study group with some people and learned a lot. We went through one of the more challenging Procedural Ruby labs. One thing that I had never though to do was put my &lt;code&gt;pry&lt;/code&gt; in the &lt;code&gt;rspec&lt;/code&gt; test file. So I could look at what was going on when everything had already been passed in. I had been putting the &lt;code&gt;pry&lt;/code&gt; in my code and then needing to call the methods above it before I could work on the current problem. I&amp;rsquo;m still not 100% on utilizing &lt;code&gt;pry&lt;/code&gt; but I&amp;rsquo;m getting there. It&amp;rsquo;s definitely easier and more useful than IRB.&lt;/p&gt;

&lt;p&gt;Another nifty thing I learned from the study group, which I&amp;rsquo;m still not completely comfortable with but makes sense, is calling methods on &lt;code&gt;end&lt;/code&gt;. For example we did this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;def all_holidays_with_bbq(holiday_hash)
  holiday_hash.map do |season, holidays|
    holidays.map do |holiday_name, supplies
      supplies.include?(&amp;quot;BBQ&amp;quot;) ? holiday_name : nil
    end
  end.flatten.compact
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The way this works is the &lt;code&gt;.flatten.compact&lt;/code&gt; is being called on the return value of &lt;code&gt;holiday_hash.map&lt;/code&gt;. It&amp;rsquo;s still settling in my mind and I haven&amp;rsquo;t used it since but I can see where this is useful.&lt;/p&gt;

&lt;p&gt;Mike who I pair programmed with last night informed me to get a solid understanding of &lt;code&gt;self&lt;/code&gt; so I&amp;rsquo;ve been taking details notes on things I think are of value. I have:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We can define methods in which we tell objects to operate on themselves. We do so using the &lt;code&gt;self&lt;/code&gt; keyword, inside the body of an instance method, to refer to the very same object the method is being called on.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I like that definition and it&amp;rsquo;s not too abstract for me to understand what it&amp;rsquo;s saying.&lt;/p&gt;

&lt;p&gt;Lastly, in one of the lectures Avi stated to try not to use the &lt;code&gt;return&lt;/code&gt; method. He said if you have to use &lt;code&gt;return&lt;/code&gt; you&amp;rsquo;re probably doing something wrong and utilizing &lt;code&gt;return&lt;/code&gt; can cause problems. This is because every method has a return. We should be able to get what we need utilizing higher level methods that will return to us what we&amp;rsquo;re looking for. This makes a lot of sense to me. If I have to use the &lt;code&gt;return&lt;/code&gt; method then I&amp;rsquo;m probably missing something in the code I&amp;rsquo;m returning. While this isn&amp;rsquo;t a hard and fast rule it&amp;rsquo;s something I&amp;rsquo;m going to try and stick to.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re keeping up, I didn&amp;rsquo;t look into &lt;code&gt;||=&lt;/code&gt; &lt;code&gt;&amp;amp;.&lt;/code&gt; or &lt;code&gt;.tap&lt;/code&gt; today.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m 55% through Object Oriented Ruby. I just realized this because I took a glance at my Dashboard which I haven&amp;rsquo;t really been doing lately. It&amp;rsquo;s moving along but I know it&amp;rsquo;ll take a while once I get to the end. I have some projects to look forward to!
&lt;img src=&#34;../images/oo_ruby_project_dropdown.jpg&#34; alt=&#34;object oriented ruby projects list&#34; title=&#34;Object Oriented Ruby Projects&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Time spent today: 3:17&lt;br /&gt;
Time spent total: 71:00&lt;br /&gt;
Lessons completed today: 2&lt;br /&gt;
Lessons completed total: 260&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why Software Development?</title>
      <link>https://itzsaga.github.io/post/why-software-development/</link>
      <pubDate>Mon, 13 Mar 2017 19:40:42 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/why-software-development/</guid>
      <description>&lt;p&gt;So as part of my bootcamp experience Flatiron School requires me to write blog posts. This is a feature that I don&amp;rsquo;t think all bootcamps have but is smart. If I can write about coding then I show a deeper understanding about why I am a job ready developer. We all know that our online presence is part of our &amp;ldquo;resume&amp;rdquo; now as more and more hiring managers are looking at social profiles when making job decisions (even if it&amp;rsquo;s a [legal slippery slope&amp;hellip;][1]).&lt;/p&gt;

&lt;p&gt;So I have assigned topic of, &amp;ldquo;Why did you decide to learn software development?&amp;rdquo;&lt;/p&gt;

&lt;p&gt;There are many reasons I decided to learn software development. Initially, it was because it is the &amp;ldquo;cool&amp;rdquo; thing to do these days. Demand is &amp;gt; Supply when it comes to people in the tech industry and overall everything we do now is being run by a computer. The Internet of Things (IoT) needs to be programmed. I truly believe that we are moving to a knowledge economy and very soon (on the grand timeline) most repetetive jobs will be replaced by robots, including driving. See a great post on [automation][2] here. However, people will need to program these things.&lt;/p&gt;

&lt;p&gt;Things like bootcamps are popping up like crazy as people are making the jump to be developers. The potential pay and benefits are attractive too. We&amp;rsquo;ve all seen images of massive tech companies and their offices where you can take a break from your bean bag workstation and get a massage from the in house masseuse while listening to a private live Billy Joel concert streamed to your company provided bluetooth Beats headphones. Okay, maybe not that extravagent but you get the idea. Or the person who travels the world making 6 figures and all they need is a laptop and internet. Having that remote work freedom at some point is also attractive. Who wouldn&amp;rsquo;t want this life?&lt;/p&gt;

&lt;p&gt;Another driving force is that I was in hospitality. An industry that is &lt;strong&gt;NOT&lt;/strong&gt; family friendly. 55+ hour weeks are required for salary managers in most instances and nights, weekends, holidays are the busy time. I kept with it by saying I would &lt;em&gt;eventually&lt;/em&gt; be in a high enough job title where I would be doing more strategic planning and thus work a more typical 9-5 schedule. I still believe that to be true. Once a person gets to District Manager or F&amp;amp;B Director you check in on early morning and closing operations occaisonally but you could care less &lt;em&gt;how&lt;/em&gt; the money is counted at close, just that it&amp;rsquo;s counted correctly. If it isn&amp;rsquo;t counted correctly there&amp;rsquo;s always a manager below you to push that to anyways. Something I rarely speak about but through my 10 years in the restaurant business I was laid off 4 times. I was paid severace a couple times and a couple times just collected unemployment but the lack of job stability paired with seeing people 2 years into a tech career making 2x what I was making cemented my interest.&lt;/p&gt;

&lt;p&gt;So I dabbled while still working my restaurant job. I learned from [freeCodeCamp][3] the most among many other places. Knowing that I could work on a project for hours without taking a break, then stop for the day, then pick it up two days later, then stop, then get stuck the next day and make zero progress, then two days later finish it off, and LOVING that process cemented in me this is something I wanted to do.&lt;/p&gt;

&lt;p&gt;I also realized that on the intellectual front I would always be challenged and have something to learn when it came to software development. I&amp;rsquo;ll never know it all and that is a bonus.&lt;/p&gt;

&lt;p&gt;So how could I make this career transition with a mortgage and 3 kids? In person bootcamps were out of the question. There are two in Nashville (that I know of) and I know people who have graduated from each. First, [Nashville Software School][4] is an awesome program. However, it takes 6 months and we didn&amp;rsquo;t have 6 months of me not working to spare. The other is [The Iron Yard][5] and while they have a solid reputation the approximately $1000/week tuition was not going to work. In addition, I knew I couldn&amp;rsquo;t be out of pocket completely for 12 weeks, my family life would fall apart. So I came across the [Flatiron School Online Web Developer Program][6]. Work at your own pace when you have time, job guarantee, a solid curriculum, and high praise from people in the industry I spoke with. The work at your own pace is what sold me the most. I could code before the kids got up and after they went to bed and all weekend long when my wife was home. I could still take care of my kids all day M-F and we wouldn&amp;rsquo;t have to pay for a nanny. I could potentially finish in 12-15 weeks (they say the curriculum takes ~800 hours) just like a more traditional bootcamp but spend $6000 instead of $10k+. Boom, now to get in. I applied, did some coding, and got accepted (acceptance rate is ~8% so it&amp;rsquo;s competitive).&lt;/p&gt;

&lt;p&gt;So ultimately I decided on software development for a few reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It genuinely interests me outside of doing it as a career.&lt;/li&gt;
&lt;li&gt;The pay ain&amp;rsquo;t bad.&lt;/li&gt;
&lt;li&gt;More &amp;ldquo;normal&amp;rdquo; schedule so I&amp;rsquo;ll be home for dinner, off on weekends and holidays.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The possibility of working remotely.&lt;/p&gt;

&lt;p&gt;[1]&amp;#x3A;&lt;a href=&#34;http://hiring.monster.com/hr/hr-best-practices/recruiting-hiring-advice/acquiring-job-candidates/social-media-recruiting-guidelines.aspx&#34;&gt;http://hiring.monster.com/hr/hr-best-practices/recruiting-hiring-advice/acquiring-job-candidates/social-media-recruiting-guidelines.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[2]&amp;#x3A;&lt;a href=&#34;https://medium.freecodecamp.com/bill-gates-and-elon-musk-just-warned-us-about-the-one-thing-politicians-are-too-scared-to-talk-8db9815fd398&#34;&gt;https://medium.freecodecamp.com/bill-gates-and-elon-musk-just-warned-us-about-the-one-thing-politicians-are-too-scared-to-talk-8db9815fd398&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[3]&amp;#x3A;&lt;a href=&#34;https://www.freecodecamp.com&#34;&gt;https://www.freecodecamp.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[4]&amp;#x3A;&lt;a href=&#34;http://nashvillesoftwareschool.com/&#34;&gt;http://nashvillesoftwareschool.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[5]&amp;#x3A;&lt;a href=&#34;https://www.theironyard.com/&#34;&gt;https://www.theironyard.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[6]&amp;#x3A;&lt;a href=&#34;https://flatironschool.com/programs/online-web-developer-career-course/&#34;&gt;https://flatironschool.com/programs/online-web-developer-career-course/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Day 14</title>
      <link>https://itzsaga.github.io/post/day-014/</link>
      <pubDate>Mon, 13 Mar 2017 00:42:32 -0500</pubDate>
      
      <guid>https://itzsaga.github.io/post/day-014/</guid>
      <description>&lt;p&gt;I promise a good blog post soon. It&amp;rsquo;s almost 1am after a LONG pair programming session, thanks &lt;a href=&#34;https://github.com/mk-etlinger&#34;&gt;Mike&lt;/a&gt;! We did however figure out a hard lab. I would&amp;rsquo;ve been struggling with it for sure. It&amp;rsquo;s not as ambiguous as it could be and we didn&amp;rsquo;t break down our methods as much as we could. However, we got all 15 tests passing and learned some new methods along the way. Specifically, the &lt;code&gt;Dir&lt;/code&gt; class methods. Mike also showed me that there&amp;rsquo;s a solution branch to all of the labs on GitHub which I never knew about. I guess it says something that I&amp;rsquo;ve made it so far so quickly and never looked at a solution. However, there can be knowledge gained from refactoring with new knowledge based on what the school thinks is the best code for the problem.&lt;/p&gt;

&lt;p&gt;I do have &amp;ldquo;homework&amp;rdquo; from Mike too (some things he has learned recently that I&amp;rsquo;m not knowledgable on). Specifically, &lt;code&gt;||=&lt;/code&gt; &lt;code&gt;&amp;amp;.&lt;/code&gt; and &lt;code&gt;.tap&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Time spent today: 11:09&lt;br /&gt;
Time spent total: 67:43&lt;br /&gt;
Lessons completed today: 11&lt;br /&gt;
Lessons completed total: 258&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>